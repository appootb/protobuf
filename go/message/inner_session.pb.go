// Code generated by protoc-gen-go. DO NOT EDIT.
// source: inner_session.proto

package message

import (
	context "context"
	fmt "fmt"
	common "github.com/appootb/protobuf/go/common"
	_ "github.com/appootb/protobuf/go/permission"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Account session type.
type SessionType int32

const (
	SessionType_SESSION_TYPE_UNSPECIFIED SessionType = 0
	SessionType_SESSION_TYPE_CHAT        SessionType = 1
	SessionType_SESSION_TYPE_ROOM        SessionType = 2
)

var SessionType_name = map[int32]string{
	0: "SESSION_TYPE_UNSPECIFIED",
	1: "SESSION_TYPE_CHAT",
	2: "SESSION_TYPE_ROOM",
}

var SessionType_value = map[string]int32{
	"SESSION_TYPE_UNSPECIFIED": 0,
	"SESSION_TYPE_CHAT":        1,
	"SESSION_TYPE_ROOM":        2,
}

func (x SessionType) Enum() *SessionType {
	p := new(SessionType)
	*p = x
	return p
}

func (x SessionType) String() string {
	return proto.EnumName(SessionType_name, int32(x))
}

func (x *SessionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SessionType_value, data, "SessionType")
	if err != nil {
		return err
	}
	*x = SessionType(value)
	return nil
}

func (SessionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_10dd3a7c9f4ef2c3, []int{0}
}

// Account session ID.
type SessionId struct {
	Type                 *SessionType `protobuf:"varint,1,req,name=type,enum=appootb.message.SessionType" json:"type,omitempty"`
	Account              *uint64      `protobuf:"varint,2,req,name=account" json:"account,omitempty"`
	DeviceId             *string      `protobuf:"bytes,3,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SessionId) Reset()         { *m = SessionId{} }
func (m *SessionId) String() string { return proto.CompactTextString(m) }
func (*SessionId) ProtoMessage()    {}
func (*SessionId) Descriptor() ([]byte, []int) {
	return fileDescriptor_10dd3a7c9f4ef2c3, []int{0}
}

func (m *SessionId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionId.Unmarshal(m, b)
}
func (m *SessionId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionId.Marshal(b, m, deterministic)
}
func (m *SessionId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionId.Merge(m, src)
}
func (m *SessionId) XXX_Size() int {
	return xxx_messageInfo_SessionId.Size(m)
}
func (m *SessionId) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionId.DiscardUnknown(m)
}

var xxx_messageInfo_SessionId proto.InternalMessageInfo

func (m *SessionId) GetType() SessionType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return SessionType_SESSION_TYPE_UNSPECIFIED
}

func (m *SessionId) GetAccount() uint64 {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return 0
}

func (m *SessionId) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

// Account session IDs.
type SessionIds struct {
	Ids                  []*SessionId `protobuf:"bytes,1,rep,name=ids" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SessionIds) Reset()         { *m = SessionIds{} }
func (m *SessionIds) String() string { return proto.CompactTextString(m) }
func (*SessionIds) ProtoMessage()    {}
func (*SessionIds) Descriptor() ([]byte, []int) {
	return fileDescriptor_10dd3a7c9f4ef2c3, []int{1}
}

func (m *SessionIds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionIds.Unmarshal(m, b)
}
func (m *SessionIds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionIds.Marshal(b, m, deterministic)
}
func (m *SessionIds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionIds.Merge(m, src)
}
func (m *SessionIds) XXX_Size() int {
	return xxx_messageInfo_SessionIds.Size(m)
}
func (m *SessionIds) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionIds.DiscardUnknown(m)
}

var xxx_messageInfo_SessionIds proto.InternalMessageInfo

func (m *SessionIds) GetIds() []*SessionId {
	if m != nil {
		return m.Ids
	}
	return nil
}

// Account session.
type Session struct {
	Type                 *SessionType         `protobuf:"varint,1,req,name=type,enum=appootb.message.SessionType" json:"type,omitempty"`
	Entry                *string              `protobuf:"bytes,2,req,name=entry" json:"entry,omitempty"`
	Metadata             *common.Metadata     `protobuf:"bytes,3,req,name=metadata" json:"metadata,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,4,req,name=created_at,json=createdAt" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_10dd3a7c9f4ef2c3, []int{2}
}

func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetType() SessionType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return SessionType_SESSION_TYPE_UNSPECIFIED
}

func (m *Session) GetEntry() string {
	if m != nil && m.Entry != nil {
		return *m.Entry
	}
	return ""
}

func (m *Session) GetMetadata() *common.Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Session) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

// Account sessions.
type Sessions struct {
	Sessions             []*Session `protobuf:"bytes,1,rep,name=sessions" json:"sessions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Sessions) Reset()         { *m = Sessions{} }
func (m *Sessions) String() string { return proto.CompactTextString(m) }
func (*Sessions) ProtoMessage()    {}
func (*Sessions) Descriptor() ([]byte, []int) {
	return fileDescriptor_10dd3a7c9f4ef2c3, []int{3}
}

func (m *Sessions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sessions.Unmarshal(m, b)
}
func (m *Sessions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sessions.Marshal(b, m, deterministic)
}
func (m *Sessions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sessions.Merge(m, src)
}
func (m *Sessions) XXX_Size() int {
	return xxx_messageInfo_Sessions.Size(m)
}
func (m *Sessions) XXX_DiscardUnknown() {
	xxx_messageInfo_Sessions.DiscardUnknown(m)
}

var xxx_messageInfo_Sessions proto.InternalMessageInfo

func (m *Sessions) GetSessions() []*Session {
	if m != nil {
		return m.Sessions
	}
	return nil
}

func init() {
	proto.RegisterEnum("appootb.message.SessionType", SessionType_name, SessionType_value)
	proto.RegisterType((*SessionId)(nil), "appootb.message.SessionId")
	proto.RegisterType((*SessionIds)(nil), "appootb.message.SessionIds")
	proto.RegisterType((*Session)(nil), "appootb.message.Session")
	proto.RegisterType((*Sessions)(nil), "appootb.message.Sessions")
}

func init() { proto.RegisterFile("inner_session.proto", fileDescriptor_10dd3a7c9f4ef2c3) }

var fileDescriptor_10dd3a7c9f4ef2c3 = []byte{
	// 598 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x31, 0x6f, 0xd3, 0x40,
	0x18, 0xc5, 0x8e, 0xab, 0x36, 0x17, 0x04, 0xe9, 0x95, 0x16, 0xd7, 0x09, 0xaa, 0xf1, 0x80, 0xa2,
	0x08, 0xf9, 0x50, 0x80, 0x81, 0xb2, 0x90, 0x84, 0x40, 0x3d, 0xa4, 0x89, 0x9c, 0x30, 0x14, 0x55,
	0xb5, 0xae, 0xf6, 0x11, 0x2c, 0xd5, 0x3e, 0xcb, 0x77, 0x41, 0x44, 0x51, 0x04, 0xe2, 0x2f, 0xb0,
	0x30, 0x33, 0xf2, 0x33, 0x18, 0x59, 0x18, 0xf8, 0x0b, 0xfc, 0x08, 0x46, 0x64, 0xfb, 0x6c, 0x95,
	0xb4, 0xe9, 0xc0, 0x78, 0xdf, 0x7b, 0xfe, 0xde, 0xf7, 0xde, 0x7d, 0x67, 0xb0, 0xe5, 0x87, 0x21,
	0x89, 0x1d, 0x46, 0x18, 0xf3, 0x69, 0x68, 0x46, 0x31, 0xe5, 0x14, 0xde, 0xc4, 0x51, 0x44, 0x29,
	0x3f, 0x35, 0x03, 0xc2, 0x18, 0x9e, 0x10, 0xed, 0x8e, 0x28, 0x20, 0x97, 0x06, 0x01, 0x0d, 0x51,
	0x40, 0x38, 0xf6, 0x30, 0xc7, 0x19, 0x5f, 0xd3, 0x73, 0x38, 0x22, 0x71, 0xe0, 0xa7, 0x9d, 0x10,
	0x23, 0xf1, 0x3b, 0xdf, 0x25, 0x82, 0x51, 0x9f, 0x50, 0x3a, 0x39, 0x23, 0x08, 0x47, 0x3e, 0xc2,
	0x61, 0x48, 0x39, 0xe6, 0x3e, 0x0d, 0x99, 0x40, 0x6b, 0x02, 0x4d, 0x4f, 0xa7, 0xd3, 0x37, 0x88,
	0x04, 0x11, 0x9f, 0x09, 0x70, 0x6f, 0x19, 0xe4, 0x7e, 0x40, 0x18, 0xc7, 0x41, 0x94, 0x11, 0x0c,
	0x0e, 0xca, 0xa3, 0x6c, 0x7c, 0xcb, 0x83, 0x0f, 0x80, 0xc2, 0x67, 0x11, 0x51, 0x25, 0x5d, 0x6e,
	0xdc, 0x68, 0xd5, 0xcd, 0x25, 0x27, 0xa6, 0x60, 0x8e, 0x67, 0x11, 0xb1, 0x53, 0x26, 0x54, 0xc1,
	0x3a, 0x76, 0x5d, 0x3a, 0x0d, 0xb9, 0x2a, 0xeb, 0x72, 0x43, 0xb1, 0xf3, 0x23, 0xac, 0x81, 0xb2,
	0x47, 0x12, 0x13, 0x8e, 0xef, 0xa9, 0x25, 0x5d, 0x6a, 0x94, 0xed, 0x8d, 0xac, 0x60, 0x79, 0xc6,
	0x3e, 0x00, 0x85, 0x2a, 0x83, 0xf7, 0x41, 0xc9, 0xf7, 0x98, 0x2a, 0xe9, 0xa5, 0x46, 0xa5, 0xa5,
	0xad, 0x52, 0xb5, 0x3c, 0x3b, 0xa1, 0x19, 0xdf, 0x25, 0xb0, 0x2e, 0x4a, 0xff, 0x31, 0xf0, 0x2d,
	0xb0, 0x46, 0x42, 0x1e, 0xcf, 0xd2, 0x71, 0xcb, 0x76, 0x76, 0x80, 0x8f, 0xc0, 0x46, 0x7e, 0x2b,
	0x6a, 0x49, 0x97, 0x1b, 0x95, 0x96, 0x5a, 0xf4, 0xca, 0x6e, 0xcd, 0xec, 0x0b, 0xdc, 0x2e, 0x98,
	0xf0, 0x09, 0x00, 0x6e, 0x4c, 0x30, 0x27, 0x9e, 0x83, 0xb9, 0xaa, 0xa4, 0xdf, 0x69, 0x66, 0x96,
	0xb8, 0x99, 0x27, 0x6e, 0x8e, 0xf3, 0xc4, 0xed, 0xb2, 0x60, 0xb7, 0xb9, 0xf1, 0x0c, 0x6c, 0x88,
	0xd9, 0x58, 0x22, 0x2e, 0x36, 0x28, 0xcf, 0x40, 0x5d, 0x65, 0xc4, 0x2e, 0x98, 0xcd, 0x23, 0x50,
	0x39, 0xe7, 0x0e, 0xd6, 0x81, 0x3a, 0xea, 0x8d, 0x46, 0xd6, 0xe0, 0xd0, 0x19, 0x1f, 0x0d, 0x7b,
	0xce, 0xab, 0xc3, 0xd1, 0xb0, 0xd7, 0xb5, 0x5e, 0x58, 0xbd, 0xe7, 0xd5, 0x6b, 0x70, 0x1b, 0x6c,
	0xfe, 0x83, 0x76, 0x0f, 0xda, 0xe3, 0xaa, 0x74, 0xa1, 0x6c, 0x0f, 0x06, 0xfd, 0xaa, 0xdc, 0xfa,
	0x29, 0x83, 0xeb, 0x56, 0xb2, 0xd9, 0x79, 0xcc, 0x27, 0x40, 0x19, 0x44, 0x24, 0x84, 0x2b, 0xe7,
	0xd2, 0x76, 0x57, 0x21, 0xcc, 0xb8, 0xfb, 0xe9, 0xd7, 0xef, 0xcf, 0x72, 0xcd, 0xd8, 0x41, 0x02,
	0x42, 0xe9, 0xab, 0x41, 0xc2, 0xc9, 0xbe, 0xd4, 0x84, 0xef, 0xc1, 0x5a, 0xf7, 0x8c, 0x32, 0x02,
	0xaf, 0xb8, 0x7c, 0x6d, 0xe7, 0x42, 0xb2, 0xbd, 0x64, 0xd1, 0x8d, 0xa7, 0x69, 0xff, 0xc7, 0xcd,
	0x87, 0x97, 0xf7, 0x47, 0xf3, 0xe4, 0xde, 0x17, 0x68, 0x2e, 0x16, 0x73, 0x81, 0xe6, 0xc5, 0x5e,
	0x2e, 0xa0, 0x03, 0x94, 0x97, 0x84, 0x33, 0x58, 0x5b, 0x2d, 0xcc, 0xae, 0x32, 0xb7, 0x97, 0x8a,
	0xef, 0xc2, 0xdb, 0x97, 0x8b, 0x33, 0x4d, 0xf9, 0x72, 0xf2, 0x51, 0xee, 0x7c, 0x00, 0x5b, 0x2e,
	0x0d, 0x96, 0xdb, 0x74, 0x36, 0xcf, 0xa7, 0x3c, 0x4c, 0x6c, 0x1d, 0x48, 0x43, 0xe9, 0xf5, 0xbd,
	0x89, 0xcf, 0xdf, 0x4e, 0xd3, 0xcd, 0x43, 0xc5, 0xcf, 0x21, 0x7f, 0xc0, 0x13, 0x9a, 0x4b, 0xfd,
	0x91, 0xa4, 0xaf, 0x72, 0xa9, 0x3b, 0xec, 0x7c, 0x93, 0xd7, 0xfb, 0x59, 0xe9, 0x87, 0xbc, 0xdd,
	0xce, 0x3e, 0x38, 0x4e, 0xdb, 0x1d, 0x8b, 0xfa, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x35, 0x36,
	0x9e, 0x68, 0xaa, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InnerSessionClient is the client API for InnerSession service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InnerSessionClient interface {
	// Add user session.
	Open(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Sessions, error)
	// Close user session.
	Close(ctx context.Context, in *SessionId, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get user sessions.
	Gets(ctx context.Context, in *SessionIds, opts ...grpc.CallOption) (*Sessions, error)
}

type innerSessionClient struct {
	cc *grpc.ClientConn
}

func NewInnerSessionClient(cc *grpc.ClientConn) InnerSessionClient {
	return &innerSessionClient{cc}
}

func (c *innerSessionClient) Open(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Sessions, error) {
	out := new(Sessions)
	err := c.cc.Invoke(ctx, "/appootb.message.InnerSession/Open", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *innerSessionClient) Close(ctx context.Context, in *SessionId, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appootb.message.InnerSession/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *innerSessionClient) Gets(ctx context.Context, in *SessionIds, opts ...grpc.CallOption) (*Sessions, error) {
	out := new(Sessions)
	err := c.cc.Invoke(ctx, "/appootb.message.InnerSession/Gets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InnerSessionServer is the server API for InnerSession service.
type InnerSessionServer interface {
	// Add user session.
	Open(context.Context, *Session) (*Sessions, error)
	// Close user session.
	Close(context.Context, *SessionId) (*empty.Empty, error)
	// Get user sessions.
	Gets(context.Context, *SessionIds) (*Sessions, error)
}

// UnimplementedInnerSessionServer can be embedded to have forward compatible implementations.
type UnimplementedInnerSessionServer struct {
}

func (*UnimplementedInnerSessionServer) Open(ctx context.Context, req *Session) (*Sessions, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Open not implemented")
}
func (*UnimplementedInnerSessionServer) Close(ctx context.Context, req *SessionId) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}
func (*UnimplementedInnerSessionServer) Gets(ctx context.Context, req *SessionIds) (*Sessions, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Gets not implemented")
}

func RegisterInnerSessionServer(s *grpc.Server, srv InnerSessionServer) {
	s.RegisterService(&_InnerSession_serviceDesc, srv)
}

func _InnerSession_Open_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InnerSessionServer).Open(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.message.InnerSession/Open",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InnerSessionServer).Open(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

func _InnerSession_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InnerSessionServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.message.InnerSession/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InnerSessionServer).Close(ctx, req.(*SessionId))
	}
	return interceptor(ctx, in, info, handler)
}

func _InnerSession_Gets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionIds)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InnerSessionServer).Gets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.message.InnerSession/Gets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InnerSessionServer).Gets(ctx, req.(*SessionIds))
	}
	return interceptor(ctx, in, info, handler)
}

var _InnerSession_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appootb.message.InnerSession",
	HandlerType: (*InnerSessionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Open",
			Handler:    _InnerSession_Open_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _InnerSession_Close_Handler,
		},
		{
			MethodName: "Gets",
			Handler:    _InnerSession_Gets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inner_session.proto",
}
