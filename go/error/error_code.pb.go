// Code generated by protoc-gen-go. DO NOT EDIT.
// source: error_code.proto

package error

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Service error code.
type ErrorCode int32

const (
	ErrorCode_ERROR_CODE_UNSPECIFIED ErrorCode = 0
	// Captcha service error code (base code 1000).
	ErrorCode_ERROR_CODE_INVALID_VERIFY_CODE ErrorCode = 1001
	ErrorCode_ERROR_CODE_SEND_LIMIT          ErrorCode = 1002
	ErrorCode_ERROR_CODE_SEND_FAILURE        ErrorCode = 1003
	ErrorCode_ERROR_CODE_INVALID_TARGET      ErrorCode = 1004
	ErrorCode_ERROR_CODE_FREQUENCY_LIMIT     ErrorCode = 1005
	ErrorCode_ERROR_CODE_OTP_DISABLED        ErrorCode = 1006
)

var ErrorCode_name = map[int32]string{
	0:    "ERROR_CODE_UNSPECIFIED",
	1001: "ERROR_CODE_INVALID_VERIFY_CODE",
	1002: "ERROR_CODE_SEND_LIMIT",
	1003: "ERROR_CODE_SEND_FAILURE",
	1004: "ERROR_CODE_INVALID_TARGET",
	1005: "ERROR_CODE_FREQUENCY_LIMIT",
	1006: "ERROR_CODE_OTP_DISABLED",
}

var ErrorCode_value = map[string]int32{
	"ERROR_CODE_UNSPECIFIED":         0,
	"ERROR_CODE_INVALID_VERIFY_CODE": 1001,
	"ERROR_CODE_SEND_LIMIT":          1002,
	"ERROR_CODE_SEND_FAILURE":        1003,
	"ERROR_CODE_INVALID_TARGET":      1004,
	"ERROR_CODE_FREQUENCY_LIMIT":     1005,
	"ERROR_CODE_OTP_DISABLED":        1006,
}

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (x *ErrorCode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErrorCode_value, data, "ErrorCode")
	if err != nil {
		return err
	}
	*x = ErrorCode(value)
	return nil
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c5513ac0a8e17e40, []int{0}
}

func init() {
	proto.RegisterEnum("appootb.error.ErrorCode", ErrorCode_name, ErrorCode_value)
}

func init() { proto.RegisterFile("error_code.proto", fileDescriptor_c5513ac0a8e17e40) }

var fileDescriptor_c5513ac0a8e17e40 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x4f, 0x4b, 0x84, 0x40,
	0x18, 0xc6, 0xd3, 0x08, 0x69, 0xa0, 0x98, 0x26, 0x2a, 0x92, 0xd8, 0x0e, 0x75, 0xea, 0xa0, 0x9f,
	0x41, 0x9d, 0xd7, 0x1a, 0x30, 0xb5, 0x51, 0x17, 0x36, 0x16, 0x86, 0x74, 0x6d, 0xeb, 0xb0, 0xbc,
	0x22, 0xee, 0x17, 0xea, 0xd8, 0x47, 0xe9, 0x7b, 0x74, 0xe8, 0xef, 0xb9, 0x63, 0xec, 0xb4, 0x84,
	0x2d, 0xdd, 0x86, 0xf7, 0xf7, 0xcc, 0x0f, 0x9e, 0x87, 0xd0, 0xba, 0x6d, 0xb1, 0x55, 0x15, 0x4e,
	0x6a, 0xa7, 0x69, 0xb1, 0x43, 0xb6, 0x75, 0xd3, 0x34, 0x88, 0x5d, 0xe9, 0x68, 0x72, 0xf6, 0x6c,
	0x90, 0x4d, 0x58, 0xbc, 0x02, 0x9c, 0xd4, 0xcc, 0x26, 0xfb, 0x20, 0x65, 0x22, 0x55, 0x90, 0x70,
	0x50, 0x45, 0x9c, 0xa5, 0x10, 0x88, 0x50, 0x00, 0xa7, 0x6b, 0xec, 0x84, 0x0c, 0x7a, 0x4c, 0xc4,
	0x43, 0x2f, 0x12, 0x5c, 0x0d, 0x41, 0x8a, 0x70, 0xa4, 0x6f, 0xf4, 0xc5, 0x62, 0x36, 0xd9, 0xeb,
	0x85, 0x32, 0x88, 0xb9, 0x8a, 0xc4, 0xa5, 0xc8, 0xe9, 0xab, 0xc5, 0x8e, 0xc8, 0xc1, 0x2a, 0x0b,
	0x3d, 0x11, 0x15, 0x12, 0xe8, 0x9b, 0xc5, 0x06, 0xe4, 0xf0, 0x1f, 0x7d, 0xee, 0xc9, 0x73, 0xc8,
	0xe9, 0xbb, 0xc5, 0x8e, 0x89, 0xdd, 0xe3, 0xa1, 0x84, 0xab, 0x02, 0xe2, 0x60, 0xb4, 0xd4, 0x7f,
	0xac, 0xea, 0x93, 0x3c, 0x55, 0x5c, 0x64, 0x9e, 0x1f, 0x01, 0xa7, 0x9f, 0x96, 0xdf, 0x91, 0x9d,
	0x0a, 0x67, 0xce, 0x9f, 0xf2, 0xfe, 0xf6, 0x6f, 0xf3, 0x74, 0xb1, 0xcd, 0x85, 0x91, 0x1a, 0xd7,
	0xa7, 0xd3, 0xfb, 0xee, 0x6e, 0x5e, 0x3a, 0x15, 0xce, 0xdc, 0x65, 0xda, 0xd5, 0xcb, 0x95, 0xf3,
	0x5b, 0x77, 0x8a, 0xae, 0xfe, 0xf9, 0x65, 0x18, 0x0f, 0xe6, 0x7a, 0x90, 0xfa, 0x8f, 0xe6, 0x86,
	0x76, 0x3c, 0x99, 0xbb, 0xde, 0x4f, 0x78, 0xac, 0x55, 0x63, 0x7d, 0xfd, 0x0e, 0x00, 0x00, 0xff,
	0xff, 0x4f, 0xe3, 0x98, 0xcd, 0x7f, 0x01, 0x00, 0x00,
}
