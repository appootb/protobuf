// Code generated by protoc-gen-auth. DO NOT EDIT!
// source: group.proto
package relation

import (
	"context"
	"net/http"

	"github.com/appootb/protobuf/go/permission"
	"github.com/appootb/protobuf/go/service"
	"github.com/appootb/protobuf/go/webstream"
	"github.com/grpc-ecosystem/grpc-gateway/runtime"
	"golang.org/x/net/websocket"
	"google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = http.StatusOK
var _ = runtime.String
var _ = context.TODO()
var _ = grpc.ServiceDesc{}
var _ = webstream.WebStream{}
var _ = websocket.UnknownFrame
var _ = permission.Subject_NONE
var _ = service.UnaryServerInterceptor

var _groupServiceSubjects = map[string][]permission.Subject{}

// Register scoped server.
func RegisterGroupScopeServer(component string, auth service.Authenticator, impl service.Implementor, srv GroupServer) error {
	// Register service required subjects.
	auth.RegisterServiceSubjects(component, _groupServiceSubjects)

	// Register scoped gRPC server.
	for _, gRPC := range impl.GetGRPCServer(permission.VisibleScope_CLIENT) {
		RegisterGroupServer(gRPC, srv)
	}
	// No gateway generated.
	return nil
}
