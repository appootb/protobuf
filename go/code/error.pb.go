// Code generated by protoc-gen-go. DO NOT EDIT.
// source: error.proto

package code

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Service error code.
type Error int32

const (
	Error_ERROR_UNSPECIFIED Error = 0
	// Captcha service error code (base code 1000).
	Error_ERROR_INVALID_CODE    Error = 1001
	Error_ERROR_SEND_LIMIT      Error = 1002
	Error_ERROR_SEND_FAILURE    Error = 1003
	Error_ERROR_INVALID_TARGET  Error = 1004
	Error_ERROR_FREQUENCY_LIMIT Error = 1005
	Error_ERROR_OTP_DISABLED    Error = 1006
)

var Error_name = map[int32]string{
	0:    "ERROR_UNSPECIFIED",
	1001: "ERROR_INVALID_CODE",
	1002: "ERROR_SEND_LIMIT",
	1003: "ERROR_SEND_FAILURE",
	1004: "ERROR_INVALID_TARGET",
	1005: "ERROR_FREQUENCY_LIMIT",
	1006: "ERROR_OTP_DISABLED",
}

var Error_value = map[string]int32{
	"ERROR_UNSPECIFIED":     0,
	"ERROR_INVALID_CODE":    1001,
	"ERROR_SEND_LIMIT":      1002,
	"ERROR_SEND_FAILURE":    1003,
	"ERROR_INVALID_TARGET":  1004,
	"ERROR_FREQUENCY_LIMIT": 1005,
	"ERROR_OTP_DISABLED":    1006,
}

func (x Error) String() string {
	return proto.EnumName(Error_name, int32(x))
}

func (Error) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0579b252106fcf4a, []int{0}
}

func init() {
	proto.RegisterEnum("appootb.code.Error", Error_name, Error_value)
}

func init() { proto.RegisterFile("error.proto", fileDescriptor_0579b252106fcf4a) }

var fileDescriptor_0579b252106fcf4a = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2d, 0x2a, 0xca,
	0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x49, 0x2c, 0x28, 0xc8, 0xcf, 0x2f, 0x49,
	0xd2, 0x4b, 0xce, 0x4f, 0x49, 0xd5, 0xda, 0xce, 0xc8, 0xc5, 0xea, 0x0a, 0x92, 0x15, 0x12, 0xe5,
	0x12, 0x74, 0x0d, 0x0a, 0xf2, 0x0f, 0x8a, 0x0f, 0xf5, 0x0b, 0x0e, 0x70, 0x75, 0xf6, 0x74, 0xf3,
	0x74, 0x75, 0x11, 0x60, 0x10, 0x12, 0xe7, 0x12, 0x82, 0x08, 0x7b, 0xfa, 0x85, 0x39, 0xfa, 0x78,
	0xba, 0xc4, 0x3b, 0xfb, 0xbb, 0xb8, 0x0a, 0xbc, 0x64, 0x17, 0x12, 0xe5, 0x12, 0x80, 0x48, 0x04,
	0xbb, 0xfa, 0xb9, 0xc4, 0xfb, 0x78, 0xfa, 0x7a, 0x86, 0x08, 0xbc, 0x62, 0x47, 0xa8, 0x07, 0x0b,
	0xbb, 0x39, 0x7a, 0xfa, 0x84, 0x06, 0xb9, 0x0a, 0xbc, 0x66, 0x17, 0x92, 0xe4, 0x12, 0x41, 0x35,
	0x28, 0xc4, 0x31, 0xc8, 0xdd, 0x35, 0x44, 0xe0, 0x0d, 0xbb, 0x90, 0x14, 0x97, 0x28, 0x44, 0xca,
	0x2d, 0xc8, 0x35, 0x30, 0xd4, 0xd5, 0xcf, 0x39, 0x12, 0x6a, 0xde, 0x5b, 0x24, 0xf3, 0xfc, 0x43,
	0x02, 0xe2, 0x5d, 0x3c, 0x83, 0x1d, 0x9d, 0x7c, 0x5c, 0x5d, 0x04, 0xde, 0xb1, 0x3b, 0xe5, 0x70,
	0x09, 0x24, 0xe7, 0xe7, 0xea, 0x21, 0xfb, 0xc6, 0x89, 0x0b, 0xec, 0x95, 0x00, 0x90, 0x3f, 0x3d,
	0x18, 0x03, 0x18, 0xa3, 0x94, 0xd3, 0x33, 0x4b, 0x32, 0x4a, 0x41, 0x92, 0xb9, 0xfa, 0x50, 0x85,
	0xfa, 0xe0, 0x50, 0x48, 0x2a, 0x4d, 0xd3, 0x4f, 0xcf, 0xd7, 0x07, 0x69, 0xfa, 0xc1, 0xc8, 0xb8,
	0x88, 0x89, 0xd9, 0x39, 0xc0, 0x69, 0x15, 0x13, 0x8b, 0x73, 0x7e, 0x4a, 0xea, 0x29, 0x26, 0x21,
	0x47, 0x88, 0xd2, 0x18, 0xb0, 0x41, 0x31, 0x20, 0xc1, 0x24, 0x36, 0xb0, 0x36, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xe5, 0x46, 0xeb, 0x0d, 0x4b, 0x01, 0x00, 0x00,
}
