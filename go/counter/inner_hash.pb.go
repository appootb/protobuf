// Code generated by protoc-gen-go. DO NOT EDIT.
// source: inner_hash.proto

package counter

import (
	context "context"
	fmt "fmt"
	_ "github.com/appootb/protobuf/go/permission"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Hash field key.
type HashField struct {
	Product              *string  `protobuf:"bytes,1,req,name=product" json:"product,omitempty"`
	Type                 *string  `protobuf:"bytes,2,req,name=type" json:"type,omitempty"`
	RelateId             *string  `protobuf:"bytes,3,req,name=relate_id,json=relateId" json:"relate_id,omitempty"`
	Field                *string  `protobuf:"bytes,4,req,name=field" json:"field,omitempty"`
	Value                *int64   `protobuf:"varint,5,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HashField) Reset()         { *m = HashField{} }
func (m *HashField) String() string { return proto.CompactTextString(m) }
func (*HashField) ProtoMessage()    {}
func (*HashField) Descriptor() ([]byte, []int) {
	return fileDescriptor_269ff201af64a925, []int{0}
}

func (m *HashField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashField.Unmarshal(m, b)
}
func (m *HashField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashField.Marshal(b, m, deterministic)
}
func (m *HashField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashField.Merge(m, src)
}
func (m *HashField) XXX_Size() int {
	return xxx_messageInfo_HashField.Size(m)
}
func (m *HashField) XXX_DiscardUnknown() {
	xxx_messageInfo_HashField.DiscardUnknown(m)
}

var xxx_messageInfo_HashField proto.InternalMessageInfo

func (m *HashField) GetProduct() string {
	if m != nil && m.Product != nil {
		return *m.Product
	}
	return ""
}

func (m *HashField) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *HashField) GetRelateId() string {
	if m != nil && m.RelateId != nil {
		return *m.RelateId
	}
	return ""
}

func (m *HashField) GetField() string {
	if m != nil && m.Field != nil {
		return *m.Field
	}
	return ""
}

func (m *HashField) GetValue() int64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

// Hash fields key.
type HashFields struct {
	Product              *string          `protobuf:"bytes,1,req,name=product" json:"product,omitempty"`
	Type                 *string          `protobuf:"bytes,2,req,name=type" json:"type,omitempty"`
	RelateId             *string          `protobuf:"bytes,3,req,name=relate_id,json=relateId" json:"relate_id,omitempty"`
	Fields               []string         `protobuf:"bytes,4,rep,name=fields" json:"fields,omitempty"`
	Values               map[string]int64 `protobuf:"bytes,5,rep,name=values" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *HashFields) Reset()         { *m = HashFields{} }
func (m *HashFields) String() string { return proto.CompactTextString(m) }
func (*HashFields) ProtoMessage()    {}
func (*HashFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_269ff201af64a925, []int{1}
}

func (m *HashFields) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashFields.Unmarshal(m, b)
}
func (m *HashFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashFields.Marshal(b, m, deterministic)
}
func (m *HashFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashFields.Merge(m, src)
}
func (m *HashFields) XXX_Size() int {
	return xxx_messageInfo_HashFields.Size(m)
}
func (m *HashFields) XXX_DiscardUnknown() {
	xxx_messageInfo_HashFields.DiscardUnknown(m)
}

var xxx_messageInfo_HashFields proto.InternalMessageInfo

func (m *HashFields) GetProduct() string {
	if m != nil && m.Product != nil {
		return *m.Product
	}
	return ""
}

func (m *HashFields) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *HashFields) GetRelateId() string {
	if m != nil && m.RelateId != nil {
		return *m.RelateId
	}
	return ""
}

func (m *HashFields) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *HashFields) GetValues() map[string]int64 {
	if m != nil {
		return m.Values
	}
	return nil
}

// Hash keys.
type HashKeys struct {
	Product              *string  `protobuf:"bytes,1,req,name=product" json:"product,omitempty"`
	Type                 *string  `protobuf:"bytes,2,req,name=type" json:"type,omitempty"`
	RelateIds            []string `protobuf:"bytes,3,rep,name=relate_ids,json=relateIds" json:"relate_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HashKeys) Reset()         { *m = HashKeys{} }
func (m *HashKeys) String() string { return proto.CompactTextString(m) }
func (*HashKeys) ProtoMessage()    {}
func (*HashKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_269ff201af64a925, []int{2}
}

func (m *HashKeys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashKeys.Unmarshal(m, b)
}
func (m *HashKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashKeys.Marshal(b, m, deterministic)
}
func (m *HashKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashKeys.Merge(m, src)
}
func (m *HashKeys) XXX_Size() int {
	return xxx_messageInfo_HashKeys.Size(m)
}
func (m *HashKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_HashKeys.DiscardUnknown(m)
}

var xxx_messageInfo_HashKeys proto.InternalMessageInfo

func (m *HashKeys) GetProduct() string {
	if m != nil && m.Product != nil {
		return *m.Product
	}
	return ""
}

func (m *HashKeys) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *HashKeys) GetRelateIds() []string {
	if m != nil {
		return m.RelateIds
	}
	return nil
}

// Hash all fields values.
type HashValue struct {
	FieldValues          map[string]int64 `protobuf:"bytes,1,rep,name=field_values,json=fieldValues" json:"field_values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *HashValue) Reset()         { *m = HashValue{} }
func (m *HashValue) String() string { return proto.CompactTextString(m) }
func (*HashValue) ProtoMessage()    {}
func (*HashValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_269ff201af64a925, []int{3}
}

func (m *HashValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashValue.Unmarshal(m, b)
}
func (m *HashValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashValue.Marshal(b, m, deterministic)
}
func (m *HashValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashValue.Merge(m, src)
}
func (m *HashValue) XXX_Size() int {
	return xxx_messageInfo_HashValue.Size(m)
}
func (m *HashValue) XXX_DiscardUnknown() {
	xxx_messageInfo_HashValue.DiscardUnknown(m)
}

var xxx_messageInfo_HashValue proto.InternalMessageInfo

func (m *HashValue) GetFieldValues() map[string]int64 {
	if m != nil {
		return m.FieldValues
	}
	return nil
}

// Hash counter key values.
type HashValues struct {
	Values               map[string]*HashValue `protobuf:"bytes,1,rep,name=values" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HashValues) Reset()         { *m = HashValues{} }
func (m *HashValues) String() string { return proto.CompactTextString(m) }
func (*HashValues) ProtoMessage()    {}
func (*HashValues) Descriptor() ([]byte, []int) {
	return fileDescriptor_269ff201af64a925, []int{4}
}

func (m *HashValues) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashValues.Unmarshal(m, b)
}
func (m *HashValues) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashValues.Marshal(b, m, deterministic)
}
func (m *HashValues) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashValues.Merge(m, src)
}
func (m *HashValues) XXX_Size() int {
	return xxx_messageInfo_HashValues.Size(m)
}
func (m *HashValues) XXX_DiscardUnknown() {
	xxx_messageInfo_HashValues.DiscardUnknown(m)
}

var xxx_messageInfo_HashValues proto.InternalMessageInfo

func (m *HashValues) GetValues() map[string]*HashValue {
	if m != nil {
		return m.Values
	}
	return nil
}

func init() {
	proto.RegisterType((*HashField)(nil), "appootb.counter.HashField")
	proto.RegisterType((*HashFields)(nil), "appootb.counter.HashFields")
	proto.RegisterMapType((map[string]int64)(nil), "appootb.counter.HashFields.ValuesEntry")
	proto.RegisterType((*HashKeys)(nil), "appootb.counter.HashKeys")
	proto.RegisterType((*HashValue)(nil), "appootb.counter.HashValue")
	proto.RegisterMapType((map[string]int64)(nil), "appootb.counter.HashValue.FieldValuesEntry")
	proto.RegisterType((*HashValues)(nil), "appootb.counter.HashValues")
	proto.RegisterMapType((map[string]*HashValue)(nil), "appootb.counter.HashValues.ValuesEntry")
}

func init() { proto.RegisterFile("inner_hash.proto", fileDescriptor_269ff201af64a925) }

var fileDescriptor_269ff201af64a925 = []byte{
	// 699 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0x4d, 0x6b, 0x13, 0x41,
	0x18, 0xc7, 0x99, 0xdd, 0xf4, 0x65, 0x9f, 0xf8, 0x52, 0x46, 0x2d, 0xeb, 0x56, 0x21, 0xec, 0x41,
	0x83, 0xc2, 0x8e, 0xf4, 0xa0, 0xb5, 0x48, 0xad, 0x29, 0x7d, 0x43, 0x2a, 0x25, 0x45, 0x05, 0x29,
	0x96, 0x6d, 0x32, 0x4d, 0x96, 0x26, 0x3b, 0xcb, 0xce, 0xa4, 0x10, 0x62, 0x50, 0x2a, 0x82, 0x08,
	0x1e, 0xc4, 0x8b, 0xe0, 0x4d, 0x3c, 0xf9, 0x51, 0xbc, 0x7a, 0xf5, 0xe8, 0xcd, 0x2f, 0xe0, 0x51,
	0xf6, 0xd9, 0x49, 0x1a, 0x4a, 0x92, 0xd2, 0x97, 0xdb, 0xce, 0xf3, 0xcc, 0xcb, 0xef, 0xff, 0xfc,
	0x9f, 0x99, 0x85, 0x89, 0x20, 0x0c, 0x79, 0xbc, 0x55, 0xf5, 0x65, 0xd5, 0x8b, 0x62, 0xa1, 0x04,
	0xbd, 0xe8, 0x47, 0x91, 0x10, 0x6a, 0xdb, 0x2b, 0x89, 0x46, 0xa8, 0x78, 0xec, 0xe4, 0x74, 0x80,
	0x45, 0x3c, 0xae, 0x07, 0x52, 0x06, 0x22, 0x64, 0x92, 0xc7, 0x7b, 0x41, 0x89, 0xa7, 0x4b, 0x9c,
	0x6b, 0x15, 0x21, 0x2a, 0x35, 0xce, 0xfc, 0x28, 0x60, 0x7e, 0x18, 0x0a, 0xe5, 0xab, 0x40, 0x84,
	0x52, 0x67, 0xa7, 0x74, 0x16, 0x47, 0xdb, 0x8d, 0x1d, 0xc6, 0xeb, 0x91, 0x6a, 0xa6, 0x49, 0x77,
	0x9f, 0x80, 0xb5, 0xe2, 0xcb, 0xea, 0x52, 0xc0, 0x6b, 0x65, 0x6a, 0xc3, 0x58, 0x14, 0x8b, 0x72,
	0xa3, 0xa4, 0x6c, 0x92, 0x33, 0xf2, 0x56, 0xb1, 0x33, 0xa4, 0x14, 0x32, 0xaa, 0x19, 0x71, 0xdb,
	0xc0, 0x30, 0x7e, 0xd3, 0x29, 0xb0, 0x62, 0x5e, 0xf3, 0x15, 0xdf, 0x0a, 0xca, 0xb6, 0x89, 0x89,
	0xf1, 0x34, 0xb0, 0x5a, 0xa6, 0x97, 0x61, 0x64, 0x27, 0xd9, 0xd3, 0xce, 0x60, 0x22, 0x1d, 0x24,
	0xd1, 0x3d, 0xbf, 0xd6, 0xe0, 0xf6, 0x48, 0x8e, 0xe4, 0xcd, 0x62, 0x3a, 0x70, 0xff, 0x12, 0x80,
	0x2e, 0x84, 0x3c, 0x4b, 0x8a, 0x49, 0x18, 0xc5, 0x83, 0xa5, 0x9d, 0xc9, 0x99, 0x79, 0xab, 0xa8,
	0x47, 0xf4, 0x21, 0x8c, 0xe2, 0xd1, 0xd2, 0x1e, 0xc9, 0x99, 0xf9, 0xec, 0xf4, 0x4d, 0xef, 0x50,
	0xd5, 0xbd, 0x03, 0x1e, 0xef, 0x19, 0xce, 0x5c, 0x0c, 0x55, 0xdc, 0x2c, 0xea, 0x65, 0xce, 0x7d,
	0xc8, 0xf6, 0x84, 0xe9, 0x04, 0x98, 0xbb, 0xbc, 0x69, 0x93, 0x1c, 0xc9, 0x5b, 0xc5, 0xe4, 0xf3,
	0x40, 0xa9, 0xd1, 0xa3, 0x74, 0xd6, 0x98, 0x21, 0xee, 0x73, 0x18, 0x4f, 0x36, 0x7f, 0xcc, 0x9b,
	0xc7, 0x95, 0x7a, 0x1d, 0xa0, 0x2b, 0x55, 0xda, 0x26, 0x2a, 0xb2, 0x3a, 0x5a, 0xa5, 0xfb, 0x55,
	0x7b, 0x89, 0x60, 0xf4, 0x09, 0x9c, 0x43, 0xb1, 0x5b, 0x5a, 0x28, 0x41, 0xa1, 0xb7, 0xfb, 0x0a,
	0xc5, 0x15, 0x1e, 0xca, 0xed, 0x15, 0x9b, 0xdd, 0x39, 0x88, 0x38, 0x73, 0x30, 0x71, 0x78, 0xc2,
	0xb1, 0x64, 0x7f, 0xd7, 0x26, 0xa7, 0xeb, 0x7b, 0x1c, 0x20, 0x43, 0x1c, 0x48, 0x27, 0xf7, 0x75,
	0xe0, 0xe9, 0x51, 0x0e, 0xdc, 0xe9, 0x45, 0xc9, 0x4e, 0x3b, 0x83, 0x0f, 0xe8, 0xc1, 0x9c, 0xfe,
	0x3d, 0x06, 0xd6, 0x6a, 0x72, 0x27, 0x93, 0x2c, 0xfd, 0x44, 0x60, 0x7c, 0x35, 0x2c, 0xc5, 0xdc,
	0x97, 0x9c, 0x3a, 0x83, 0x9b, 0xc4, 0x19, 0x92, 0x73, 0xd7, 0xf6, 0x7f, 0xfd, 0xf9, 0x6c, 0x2c,
	0x3b, 0x73, 0x4c, 0xe7, 0x18, 0x5e, 0x7a, 0x96, 0x5c, 0x7a, 0x86, 0x25, 0x66, 0x2d, 0x6d, 0x7b,
	0x9b, 0xb5, 0x12, 0xa7, 0xdb, 0xac, 0xd5, 0x35, 0xba, 0xcd, 0x5a, 0x38, 0xa7, 0x3d, 0x9b, 0x52,
	0xd2, 0x8f, 0x04, 0xce, 0xaf, 0x35, 0x6a, 0x2a, 0xe8, 0x82, 0x4d, 0x0d, 0xe9, 0x5e, 0x67, 0x58,
	0xd2, 0x2d, 0x20, 0xda, 0x03, 0xe7, 0xde, 0x40, 0x34, 0x39, 0x94, 0x6d, 0x96, 0xdc, 0xa2, 0xef,
	0x08, 0x98, 0xcb, 0x5c, 0x9d, 0xb8, 0x3c, 0x4b, 0xc8, 0x30, 0x4f, 0x4f, 0x59, 0x1e, 0xfa, 0x81,
	0x40, 0x66, 0x99, 0x2b, 0x79, 0x8a, 0x72, 0xac, 0x20, 0x4a, 0x81, 0xce, 0x9f, 0xb0, 0x1c, 0x9a,
	0x45, 0xb6, 0xe9, 0x7b, 0x02, 0xe6, 0xc6, 0x11, 0x45, 0x99, 0xf4, 0xd2, 0x97, 0xd9, 0xeb, 0xbc,
	0xcc, 0xde, 0x62, 0xf2, 0x32, 0x77, 0xfa, 0xc5, 0x3d, 0xa3, 0x7e, 0x79, 0x0d, 0x99, 0x8d, 0x23,
	0xcb, 0x32, 0x88, 0x45, 0x37, 0x88, 0x7b, 0x9a, 0x06, 0x79, 0x4b, 0xc0, 0xc2, 0x86, 0x45, 0x77,
	0xae, 0xf6, 0xc5, 0x48, 0x5e, 0xc3, 0x01, 0xde, 0xa4, 0xb7, 0xdc, 0x9d, 0x43, 0x92, 0x19, 0x7a,
	0xb7, 0x1f, 0xc9, 0x2e, 0x6f, 0x0e, 0xe5, 0x90, 0x6d, 0x27, 0xf3, 0xe5, 0xe5, 0x1b, 0xa3, 0xf0,
	0x0a, 0x2e, 0x95, 0x44, 0xfd, 0xf0, 0x39, 0x85, 0x0b, 0xdd, 0x2b, 0xbf, 0x9e, 0xe8, 0x5f, 0x21,
	0xeb, 0xe4, 0xc5, 0x8d, 0x4a, 0xa0, 0xaa, 0x8d, 0x64, 0x4e, 0x9d, 0x75, 0x7f, 0xc1, 0x9d, 0x7f,
	0x68, 0x45, 0x74, 0x30, 0xfe, 0x11, 0xf2, 0xcd, 0x30, 0x17, 0xd6, 0x0b, 0x3f, 0x8c, 0xb1, 0x85,
	0x34, 0xf4, 0xd3, 0xb8, 0xf2, 0x28, 0x5d, 0xb0, 0x89, 0xdb, 0x6d, 0xea, 0xf8, 0xff, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xc4, 0xfb, 0xb4, 0xa0, 0xee, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InnerHashClient is the client API for InnerHash service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InnerHashClient interface {
	// Increase hash field value.
	Increase(ctx context.Context, in *HashField, opts ...grpc.CallOption) (*HashField, error)
	// Multiple increase hash fields values.
	MultiIncrease(ctx context.Context, in *HashFields, opts ...grpc.CallOption) (*HashFields, error)
	// Get hash field counter value.
	Get(ctx context.Context, in *HashField, opts ...grpc.CallOption) (*HashField, error)
	// Get hash fields counter values.
	Gets(ctx context.Context, in *HashFields, opts ...grpc.CallOption) (*HashFields, error)
	// Set hash field counter value.
	Set(ctx context.Context, in *HashField, opts ...grpc.CallOption) (*empty.Empty, error)
	// Set hash fields counter values.
	Sets(ctx context.Context, in *HashFields, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get hash keys.
	MultiGets(ctx context.Context, in *HashKeys, opts ...grpc.CallOption) (*HashValues, error)
}

type innerHashClient struct {
	cc *grpc.ClientConn
}

func NewInnerHashClient(cc *grpc.ClientConn) InnerHashClient {
	return &innerHashClient{cc}
}

func (c *innerHashClient) Increase(ctx context.Context, in *HashField, opts ...grpc.CallOption) (*HashField, error) {
	out := new(HashField)
	err := c.cc.Invoke(ctx, "/appootb.counter.InnerHash/Increase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *innerHashClient) MultiIncrease(ctx context.Context, in *HashFields, opts ...grpc.CallOption) (*HashFields, error) {
	out := new(HashFields)
	err := c.cc.Invoke(ctx, "/appootb.counter.InnerHash/MultiIncrease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *innerHashClient) Get(ctx context.Context, in *HashField, opts ...grpc.CallOption) (*HashField, error) {
	out := new(HashField)
	err := c.cc.Invoke(ctx, "/appootb.counter.InnerHash/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *innerHashClient) Gets(ctx context.Context, in *HashFields, opts ...grpc.CallOption) (*HashFields, error) {
	out := new(HashFields)
	err := c.cc.Invoke(ctx, "/appootb.counter.InnerHash/Gets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *innerHashClient) Set(ctx context.Context, in *HashField, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appootb.counter.InnerHash/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *innerHashClient) Sets(ctx context.Context, in *HashFields, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appootb.counter.InnerHash/Sets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *innerHashClient) MultiGets(ctx context.Context, in *HashKeys, opts ...grpc.CallOption) (*HashValues, error) {
	out := new(HashValues)
	err := c.cc.Invoke(ctx, "/appootb.counter.InnerHash/MultiGets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InnerHashServer is the server API for InnerHash service.
type InnerHashServer interface {
	// Increase hash field value.
	Increase(context.Context, *HashField) (*HashField, error)
	// Multiple increase hash fields values.
	MultiIncrease(context.Context, *HashFields) (*HashFields, error)
	// Get hash field counter value.
	Get(context.Context, *HashField) (*HashField, error)
	// Get hash fields counter values.
	Gets(context.Context, *HashFields) (*HashFields, error)
	// Set hash field counter value.
	Set(context.Context, *HashField) (*empty.Empty, error)
	// Set hash fields counter values.
	Sets(context.Context, *HashFields) (*empty.Empty, error)
	// Get hash keys.
	MultiGets(context.Context, *HashKeys) (*HashValues, error)
}

// UnimplementedInnerHashServer can be embedded to have forward compatible implementations.
type UnimplementedInnerHashServer struct {
}

func (*UnimplementedInnerHashServer) Increase(ctx context.Context, req *HashField) (*HashField, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Increase not implemented")
}
func (*UnimplementedInnerHashServer) MultiIncrease(ctx context.Context, req *HashFields) (*HashFields, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultiIncrease not implemented")
}
func (*UnimplementedInnerHashServer) Get(ctx context.Context, req *HashField) (*HashField, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedInnerHashServer) Gets(ctx context.Context, req *HashFields) (*HashFields, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Gets not implemented")
}
func (*UnimplementedInnerHashServer) Set(ctx context.Context, req *HashField) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedInnerHashServer) Sets(ctx context.Context, req *HashFields) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sets not implemented")
}
func (*UnimplementedInnerHashServer) MultiGets(ctx context.Context, req *HashKeys) (*HashValues, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultiGets not implemented")
}

func RegisterInnerHashServer(s *grpc.Server, srv InnerHashServer) {
	s.RegisterService(&_InnerHash_serviceDesc, srv)
}

func _InnerHash_Increase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashField)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InnerHashServer).Increase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.counter.InnerHash/Increase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InnerHashServer).Increase(ctx, req.(*HashField))
	}
	return interceptor(ctx, in, info, handler)
}

func _InnerHash_MultiIncrease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashFields)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InnerHashServer).MultiIncrease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.counter.InnerHash/MultiIncrease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InnerHashServer).MultiIncrease(ctx, req.(*HashFields))
	}
	return interceptor(ctx, in, info, handler)
}

func _InnerHash_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashField)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InnerHashServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.counter.InnerHash/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InnerHashServer).Get(ctx, req.(*HashField))
	}
	return interceptor(ctx, in, info, handler)
}

func _InnerHash_Gets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashFields)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InnerHashServer).Gets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.counter.InnerHash/Gets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InnerHashServer).Gets(ctx, req.(*HashFields))
	}
	return interceptor(ctx, in, info, handler)
}

func _InnerHash_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashField)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InnerHashServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.counter.InnerHash/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InnerHashServer).Set(ctx, req.(*HashField))
	}
	return interceptor(ctx, in, info, handler)
}

func _InnerHash_Sets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashFields)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InnerHashServer).Sets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.counter.InnerHash/Sets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InnerHashServer).Sets(ctx, req.(*HashFields))
	}
	return interceptor(ctx, in, info, handler)
}

func _InnerHash_MultiGets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashKeys)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InnerHashServer).MultiGets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.counter.InnerHash/MultiGets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InnerHashServer).MultiGets(ctx, req.(*HashKeys))
	}
	return interceptor(ctx, in, info, handler)
}

var _InnerHash_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appootb.counter.InnerHash",
	HandlerType: (*InnerHashServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Increase",
			Handler:    _InnerHash_Increase_Handler,
		},
		{
			MethodName: "MultiIncrease",
			Handler:    _InnerHash_MultiIncrease_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _InnerHash_Get_Handler,
		},
		{
			MethodName: "Gets",
			Handler:    _InnerHash_Gets_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _InnerHash_Set_Handler,
		},
		{
			MethodName: "Sets",
			Handler:    _InnerHash_Sets_Handler,
		},
		{
			MethodName: "MultiGets",
			Handler:    _InnerHash_MultiGets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inner_hash.proto",
}
