// Code generated by protoc-gen-go. DO NOT EDIT.
// source: inner_hash_field.proto

package counter

import (
	context "context"
	fmt "fmt"
	_ "github.com/appootb/protobuf/go/permission"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Hash field key.
type HashFieldKey struct {
	Product              *string  `protobuf:"bytes,1,req,name=product" json:"product,omitempty"`
	Type                 *string  `protobuf:"bytes,2,req,name=type" json:"type,omitempty"`
	RelateId             *string  `protobuf:"bytes,3,req,name=relate_id,json=relateId" json:"relate_id,omitempty"`
	Field                *string  `protobuf:"bytes,4,req,name=field" json:"field,omitempty"`
	Value                *int64   `protobuf:"varint,5,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HashFieldKey) Reset()         { *m = HashFieldKey{} }
func (m *HashFieldKey) String() string { return proto.CompactTextString(m) }
func (*HashFieldKey) ProtoMessage()    {}
func (*HashFieldKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf7567d74d1ad27c, []int{0}
}

func (m *HashFieldKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashFieldKey.Unmarshal(m, b)
}
func (m *HashFieldKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashFieldKey.Marshal(b, m, deterministic)
}
func (m *HashFieldKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashFieldKey.Merge(m, src)
}
func (m *HashFieldKey) XXX_Size() int {
	return xxx_messageInfo_HashFieldKey.Size(m)
}
func (m *HashFieldKey) XXX_DiscardUnknown() {
	xxx_messageInfo_HashFieldKey.DiscardUnknown(m)
}

var xxx_messageInfo_HashFieldKey proto.InternalMessageInfo

func (m *HashFieldKey) GetProduct() string {
	if m != nil && m.Product != nil {
		return *m.Product
	}
	return ""
}

func (m *HashFieldKey) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *HashFieldKey) GetRelateId() string {
	if m != nil && m.RelateId != nil {
		return *m.RelateId
	}
	return ""
}

func (m *HashFieldKey) GetField() string {
	if m != nil && m.Field != nil {
		return *m.Field
	}
	return ""
}

func (m *HashFieldKey) GetValue() int64 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*HashFieldKey)(nil), "appootb.counter.HashFieldKey")
}

func init() { proto.RegisterFile("inner_hash_field.proto", fileDescriptor_cf7567d74d1ad27c) }

var fileDescriptor_cf7567d74d1ad27c = []byte{
	// 422 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x41, 0x8b, 0xd4, 0x30,
	0x1c, 0xc5, 0x49, 0x3b, 0xcb, 0xee, 0x06, 0x51, 0xc8, 0xea, 0x52, 0xba, 0x0a, 0xc3, 0x1c, 0x64,
	0x4f, 0x0d, 0x78, 0xf4, 0x20, 0x3a, 0x8b, 0xbb, 0x3b, 0x88, 0x30, 0xac, 0x37, 0x19, 0x1c, 0x32,
	0xed, 0x7f, 0xda, 0x40, 0x9b, 0x84, 0x34, 0x1d, 0x18, 0x4a, 0x41, 0x05, 0x4f, 0x1e, 0x3d, 0xe8,
	0xd9, 0xa3, 0x1f, 0x45, 0xbc, 0xf9, 0x15, 0xfc, 0x10, 0x1e, 0xa5, 0x49, 0x3b, 0xea, 0x1c, 0xf4,
	0x30, 0x7b, 0xeb, 0xff, 0xbd, 0xa4, 0xfc, 0xfe, 0x2f, 0x0f, 0x1f, 0x73, 0x21, 0x40, 0xcf, 0x33,
	0x56, 0x66, 0xf3, 0x25, 0x87, 0x3c, 0x89, 0x94, 0x96, 0x46, 0x92, 0x5b, 0x4c, 0x29, 0x29, 0xcd,
	0x22, 0x8a, 0x65, 0x25, 0x0c, 0xe8, 0x70, 0xd8, 0x09, 0x54, 0x81, 0x2e, 0x78, 0x59, 0x72, 0x29,
	0x68, 0x09, 0x7a, 0xc5, 0x63, 0x70, 0x57, 0xc2, 0xbb, 0xa9, 0x94, 0x69, 0x0e, 0x94, 0x29, 0x4e,
	0x99, 0x10, 0xd2, 0x30, 0xc3, 0xa5, 0x28, 0x3b, 0xf7, 0xa4, 0x73, 0xed, 0xb4, 0xa8, 0x96, 0x14,
	0x0a, 0x65, 0xd6, 0xce, 0x1c, 0xbd, 0x43, 0xf8, 0xc6, 0x25, 0x2b, 0xb3, 0xf3, 0x96, 0xe0, 0x19,
	0xac, 0x49, 0x80, 0xf7, 0x95, 0x96, 0x49, 0x15, 0x9b, 0x00, 0x0d, 0xbd, 0xd3, 0xc3, 0xab, 0x7e,
	0x24, 0x04, 0x0f, 0xcc, 0x5a, 0x41, 0xe0, 0x59, 0xd9, 0x7e, 0x93, 0x13, 0x7c, 0xa8, 0x21, 0x67,
	0x06, 0xe6, 0x3c, 0x09, 0x7c, 0x6b, 0x1c, 0x38, 0x61, 0x92, 0x90, 0xdb, 0x78, 0xcf, 0x2e, 0x16,
	0x0c, 0xac, 0xe1, 0x86, 0x56, 0x5d, 0xb1, 0xbc, 0x82, 0x60, 0x6f, 0x88, 0x4e, 0xfd, 0x2b, 0x37,
	0x3c, 0xf8, 0xe6, 0xe3, 0x9b, 0x93, 0x36, 0x90, 0x0d, 0x0c, 0xf9, 0x88, 0xf0, 0xc1, 0x44, 0xc4,
	0x1a, 0x58, 0x09, 0xe4, 0x5e, 0xb4, 0x15, 0x4b, 0xf4, 0x27, 0x75, 0xf8, 0x6f, 0x7b, 0xf4, 0xfc,
	0xed, 0xf7, 0x1f, 0x1f, 0xbc, 0x8b, 0xf0, 0x11, 0xed, 0x6c, 0x6a, 0xc3, 0xa7, 0xbf, 0xc3, 0xa7,
	0x75, 0xb7, 0x66, 0x43, 0xeb, 0x76, 0xb3, 0x86, 0xd6, 0x9b, 0xc5, 0x1a, 0x5a, 0xdb, 0x33, 0xcd,
	0x43, 0x07, 0x4b, 0xde, 0x23, 0xec, 0x5f, 0x80, 0xd9, 0x11, 0xea, 0xdc, 0x42, 0x3d, 0x26, 0x3b,
	0x42, 0x59, 0x9a, 0x17, 0xff, 0xa7, 0x39, 0x8e, 0x5c, 0x0f, 0xa2, 0xbe, 0x07, 0xd1, 0xd3, 0xb6,
	0x07, 0x7d, 0x36, 0xa3, 0xeb, 0xc9, 0x26, 0x1c, 0x7c, 0x7a, 0xf5, 0xda, 0x1b, 0xbf, 0x41, 0xf8,
	0x28, 0x96, 0xc5, 0x36, 0xd1, 0xf8, 0xe8, 0xef, 0x37, 0x9e, 0xb6, 0x28, 0x97, 0x68, 0x8a, 0x5e,
	0xde, 0x4f, 0xb9, 0xc9, 0xaa, 0xf6, 0x60, 0x41, 0x37, 0x7d, 0xef, 0x0b, 0x9b, 0xca, 0x9e, 0xed,
	0x27, 0x42, 0x9f, 0x3d, 0xff, 0x6c, 0x3a, 0xfe, 0xe2, 0xed, 0x9f, 0x39, 0xe9, 0xab, 0x77, 0xe7,
	0x89, 0xbb, 0x30, 0xb3, 0xbf, 0x9b, 0x75, 0xfa, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x58, 0x45,
	0x03, 0xd0, 0x61, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InnerHashFieldClient is the client API for InnerHashField service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InnerHashFieldClient interface {
	// Increase hash field value.
	Increase(ctx context.Context, in *HashFieldKey, opts ...grpc.CallOption) (*HashFieldKey, error)
	// Get hash field counter value.
	Get(ctx context.Context, in *HashFieldKey, opts ...grpc.CallOption) (*HashFieldKey, error)
	// Set hash field counter value.
	Set(ctx context.Context, in *HashFieldKey, opts ...grpc.CallOption) (*empty.Empty, error)
}

type innerHashFieldClient struct {
	cc *grpc.ClientConn
}

func NewInnerHashFieldClient(cc *grpc.ClientConn) InnerHashFieldClient {
	return &innerHashFieldClient{cc}
}

func (c *innerHashFieldClient) Increase(ctx context.Context, in *HashFieldKey, opts ...grpc.CallOption) (*HashFieldKey, error) {
	out := new(HashFieldKey)
	err := c.cc.Invoke(ctx, "/appootb.counter.InnerHashField/Increase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *innerHashFieldClient) Get(ctx context.Context, in *HashFieldKey, opts ...grpc.CallOption) (*HashFieldKey, error) {
	out := new(HashFieldKey)
	err := c.cc.Invoke(ctx, "/appootb.counter.InnerHashField/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *innerHashFieldClient) Set(ctx context.Context, in *HashFieldKey, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appootb.counter.InnerHashField/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InnerHashFieldServer is the server API for InnerHashField service.
type InnerHashFieldServer interface {
	// Increase hash field value.
	Increase(context.Context, *HashFieldKey) (*HashFieldKey, error)
	// Get hash field counter value.
	Get(context.Context, *HashFieldKey) (*HashFieldKey, error)
	// Set hash field counter value.
	Set(context.Context, *HashFieldKey) (*empty.Empty, error)
}

// UnimplementedInnerHashFieldServer can be embedded to have forward compatible implementations.
type UnimplementedInnerHashFieldServer struct {
}

func (*UnimplementedInnerHashFieldServer) Increase(ctx context.Context, req *HashFieldKey) (*HashFieldKey, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Increase not implemented")
}
func (*UnimplementedInnerHashFieldServer) Get(ctx context.Context, req *HashFieldKey) (*HashFieldKey, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedInnerHashFieldServer) Set(ctx context.Context, req *HashFieldKey) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}

func RegisterInnerHashFieldServer(s *grpc.Server, srv InnerHashFieldServer) {
	s.RegisterService(&_InnerHashField_serviceDesc, srv)
}

func _InnerHashField_Increase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashFieldKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InnerHashFieldServer).Increase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.counter.InnerHashField/Increase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InnerHashFieldServer).Increase(ctx, req.(*HashFieldKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _InnerHashField_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashFieldKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InnerHashFieldServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.counter.InnerHashField/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InnerHashFieldServer).Get(ctx, req.(*HashFieldKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _InnerHashField_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HashFieldKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InnerHashFieldServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.counter.InnerHashField/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InnerHashFieldServer).Set(ctx, req.(*HashFieldKey))
	}
	return interceptor(ctx, in, info, handler)
}

var _InnerHashField_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appootb.counter.InnerHashField",
	HandlerType: (*InnerHashFieldServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Increase",
			Handler:    _InnerHashField_Increase_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _InnerHashField_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _InnerHashField_Set_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inner_hash_field.proto",
}
