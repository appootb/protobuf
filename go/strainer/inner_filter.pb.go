// Code generated by protoc-gen-go. DO NOT EDIT.
// source: inner_filter.proto

package strainer

import (
	context "context"
	fmt "fmt"
	_ "github.com/appootb/protobuf/go/permission"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("inner_filter.proto", fileDescriptor_3d8cf25fd9cf7f97) }

var fileDescriptor_3d8cf25fd9cf7f97 = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xca, 0xcc, 0xcb, 0x4b,
	0x2d, 0x8a, 0x4f, 0xcb, 0xcc, 0x29, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12,
	0x48, 0x2c, 0x28, 0xc8, 0xcf, 0x2f, 0x49, 0xd2, 0x2b, 0x2e, 0x29, 0x4a, 0xcc, 0xcc, 0x4b, 0x2d,
	0x92, 0x52, 0x80, 0x8a, 0xe8, 0x17, 0xa4, 0x16, 0xe5, 0x66, 0x16, 0x17, 0x67, 0xe6, 0xe7, 0xe9,
	0x17, 0xa7, 0x16, 0x95, 0x65, 0x26, 0xa7, 0x42, 0xf4, 0x48, 0xc9, 0xa4, 0xe7, 0xe7, 0xa7, 0xe7,
	0xa4, 0xea, 0x27, 0x16, 0x64, 0xea, 0x27, 0xe6, 0xe5, 0xe5, 0x97, 0x24, 0x96, 0x64, 0xe6, 0xe7,
	0x15, 0x43, 0x65, 0xa5, 0xa1, 0xb2, 0x60, 0x5e, 0x52, 0x69, 0x9a, 0x7e, 0x6a, 0x6e, 0x41, 0x49,
	0x25, 0x54, 0x92, 0x37, 0x33, 0x2f, 0x39, 0xa7, 0x34, 0x05, 0x6a, 0x92, 0x51, 0x25, 0x17, 0xb7,
	0x27, 0xc8, 0x4d, 0x6e, 0x60, 0x27, 0x09, 0xa5, 0x70, 0xb1, 0x41, 0x59, 0xf2, 0x7a, 0xe8, 0xee,
	0xd2, 0x83, 0xc8, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x48, 0x89, 0xe9, 0x41, 0xac, 0xd1,
	0x83, 0x59, 0xa3, 0xe7, 0x0a, 0xb2, 0x46, 0x49, 0xb1, 0xe9, 0xf2, 0x93, 0xc9, 0x4c, 0xd2, 0x4a,
	0x62, 0xfa, 0x30, 0x8d, 0xfa, 0x60, 0x5f, 0xeb, 0x43, 0x7c, 0x6d, 0xc5, 0xa8, 0x25, 0xc5, 0x32,
	0x23, 0xae, 0x81, 0xc9, 0xa9, 0x89, 0x91, 0x4b, 0x24, 0x39, 0x3f, 0x17, 0xc3, 0x1e, 0x27, 0x01,
	0x24, 0x17, 0x05, 0x80, 0x0c, 0xf7, 0x60, 0x0c, 0x60, 0x8c, 0x52, 0x4f, 0xcf, 0x2c, 0xc9, 0x28,
	0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x87, 0x07, 0x10, 0xcc, 0x87, 0xe9, 0xf9, 0x70, 0xdb, 0x7e,
	0x30, 0x32, 0x2e, 0x62, 0x62, 0x76, 0x0e, 0x70, 0x5a, 0xc5, 0xc4, 0x11, 0x0c, 0x15, 0x3b, 0xc5,
	0x24, 0xe6, 0x08, 0xd1, 0x12, 0x03, 0x36, 0x30, 0x06, 0x26, 0x01, 0x08, 0x00, 0x00, 0xff, 0xff,
	0x2a, 0x3f, 0x52, 0xd2, 0x92, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InnerFilterClient is the client API for InnerFilter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InnerFilterClient interface {
	// Filter.
	Filter(ctx context.Context, in *FilterRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type innerFilterClient struct {
	cc *grpc.ClientConn
}

func NewInnerFilterClient(cc *grpc.ClientConn) InnerFilterClient {
	return &innerFilterClient{cc}
}

func (c *innerFilterClient) Filter(ctx context.Context, in *FilterRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appootb.strainer.InnerFilter/Filter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InnerFilterServer is the server API for InnerFilter service.
type InnerFilterServer interface {
	// Filter.
	Filter(context.Context, *FilterRequest) (*empty.Empty, error)
}

// UnimplementedInnerFilterServer can be embedded to have forward compatible implementations.
type UnimplementedInnerFilterServer struct {
}

func (*UnimplementedInnerFilterServer) Filter(ctx context.Context, req *FilterRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Filter not implemented")
}

func RegisterInnerFilterServer(s *grpc.Server, srv InnerFilterServer) {
	s.RegisterService(&_InnerFilter_serviceDesc, srv)
}

func _InnerFilter_Filter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InnerFilterServer).Filter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.strainer.InnerFilter/Filter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InnerFilterServer).Filter(ctx, req.(*FilterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InnerFilter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appootb.strainer.InnerFilter",
	HandlerType: (*InnerFilterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Filter",
			Handler:    _InnerFilter_Filter_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inner_filter.proto",
}
