// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.1
// source: bind.proto

package account

import (
	context "context"
	_ "github.com/appootb/protobuf/go/permission"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Account bind information.
type BindInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceType *AuthType `protobuf:"varint,1,req,name=source_type,json=sourceType,enum=appootb.account.AuthType" json:"source_type,omitempty"` // Auth source type
	SourceId   *string   `protobuf:"bytes,2,req,name=source_id,json=sourceId" json:"source_id,omitempty"`                                      // Source ID or OAuth open ID
}

func (x *BindInfo) Reset() {
	*x = BindInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindInfo) ProtoMessage() {}

func (x *BindInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bind_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindInfo.ProtoReflect.Descriptor instead.
func (*BindInfo) Descriptor() ([]byte, []int) {
	return file_bind_proto_rawDescGZIP(), []int{0}
}

func (x *BindInfo) GetSourceType() AuthType {
	if x != nil && x.SourceType != nil {
		return *x.SourceType
	}
	return AuthType_AUTH_TYPE_UNSPECIFIED
}

func (x *BindInfo) GetSourceId() string {
	if x != nil && x.SourceId != nil {
		return *x.SourceId
	}
	return ""
}

// Account bind request.
type BindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bind *BindInfo `protobuf:"bytes,1,req,name=bind" json:"bind,omitempty"` // Bind information
	Code *string   `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"` // Verification code
}

func (x *BindRequest) Reset() {
	*x = BindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindRequest) ProtoMessage() {}

func (x *BindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bind_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindRequest.ProtoReflect.Descriptor instead.
func (*BindRequest) Descriptor() ([]byte, []int) {
	return file_bind_proto_rawDescGZIP(), []int{1}
}

func (x *BindRequest) GetBind() *BindInfo {
	if x != nil {
		return x.Bind
	}
	return nil
}

func (x *BindRequest) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

// Account binds information.
type AccountBinds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Binds []*BindInfo `protobuf:"bytes,1,rep,name=binds" json:"binds,omitempty"` // Account bind info list
}

func (x *AccountBinds) Reset() {
	*x = AccountBinds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bind_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountBinds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountBinds) ProtoMessage() {}

func (x *AccountBinds) ProtoReflect() protoreflect.Message {
	mi := &file_bind_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountBinds.ProtoReflect.Descriptor instead.
func (*AccountBinds) Descriptor() ([]byte, []int) {
	return file_bind_proto_rawDescGZIP(), []int{2}
}

func (x *AccountBinds) GetBinds() []*BindInfo {
	if x != nil {
		return x.Binds
	}
	return nil
}

var File_bind_proto protoreflect.FileDescriptor

var file_bind_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x62, 0x69, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x61, 0x70,
	0x70, 0x6f, 0x6f, 0x74, 0x62, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x1f, 0x61,
	0x70, 0x70, 0x6f, 0x6f, 0x74, 0x62, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x63, 0x0a, 0x08, 0x42, 0x69, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x6f,
	0x74, 0x62, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x0b,
	0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x62,
	0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x70, 0x6f,
	0x6f, 0x74, 0x62, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x3f,
	0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x73, 0x12, 0x2f,
	0x0a, 0x05, 0x62, 0x69, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x70, 0x6f, 0x6f, 0x74, 0x62, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x42, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x62, 0x69, 0x6e, 0x64, 0x73, 0x32,
	0xa2, 0x02, 0x0a, 0x04, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x5e, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x6f, 0x74, 0x62, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1f, 0xda, 0x9c, 0x01, 0x03, 0x08, 0xac, 0x02,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2f, 0x62, 0x69, 0x6e, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x5c, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x6f, 0x74, 0x62, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1c, 0xda, 0x9c, 0x01, 0x03, 0x08, 0xac,
	0x02, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x2a, 0x0d, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2f, 0x62, 0x69, 0x6e, 0x64, 0x12, 0x5c, 0x0a, 0x04, 0x47, 0x65, 0x74, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x6f, 0x74, 0x62,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x42, 0x69, 0x6e, 0x64, 0x73, 0x22, 0x1d, 0xda, 0x9c, 0x01, 0x03, 0x08, 0xac, 0x02, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x62,
	0x69, 0x6e, 0x64, 0x73, 0x42, 0x77, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6f,
	0x6f, 0x74, 0x62, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x09, 0x42, 0x69, 0x6e,
	0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x01, 0x50, 0x01, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x6f, 0x74, 0x62, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x03, 0x43, 0x50, 0x42, 0xaa, 0x02, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0xca, 0x02, 0x15, 0x41, 0x70, 0x70, 0x6f, 0x6f, 0x74, 0x62, 0x5c,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
}

var (
	file_bind_proto_rawDescOnce sync.Once
	file_bind_proto_rawDescData = file_bind_proto_rawDesc
)

func file_bind_proto_rawDescGZIP() []byte {
	file_bind_proto_rawDescOnce.Do(func() {
		file_bind_proto_rawDescData = protoimpl.X.CompressGZIP(file_bind_proto_rawDescData)
	})
	return file_bind_proto_rawDescData
}

var file_bind_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_bind_proto_goTypes = []interface{}{
	(*BindInfo)(nil),     // 0: appootb.account.BindInfo
	(*BindRequest)(nil),  // 1: appootb.account.BindRequest
	(*AccountBinds)(nil), // 2: appootb.account.AccountBinds
	(AuthType)(0),        // 3: appootb.account.AuthType
	(*empty.Empty)(nil),  // 4: google.protobuf.Empty
}
var file_bind_proto_depIdxs = []int32{
	3, // 0: appootb.account.BindInfo.source_type:type_name -> appootb.account.AuthType
	0, // 1: appootb.account.BindRequest.bind:type_name -> appootb.account.BindInfo
	0, // 2: appootb.account.AccountBinds.binds:type_name -> appootb.account.BindInfo
	1, // 3: appootb.account.Bind.Apply:input_type -> appootb.account.BindRequest
	1, // 4: appootb.account.Bind.Cancel:input_type -> appootb.account.BindRequest
	4, // 5: appootb.account.Bind.Gets:input_type -> google.protobuf.Empty
	4, // 6: appootb.account.Bind.Apply:output_type -> google.protobuf.Empty
	4, // 7: appootb.account.Bind.Cancel:output_type -> google.protobuf.Empty
	2, // 8: appootb.account.Bind.Gets:output_type -> appootb.account.AccountBinds
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_bind_proto_init() }
func file_bind_proto_init() {
	if File_bind_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_bind_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bind_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountBinds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bind_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bind_proto_goTypes,
		DependencyIndexes: file_bind_proto_depIdxs,
		MessageInfos:      file_bind_proto_msgTypes,
	}.Build()
	File_bind_proto = out.File
	file_bind_proto_rawDesc = nil
	file_bind_proto_goTypes = nil
	file_bind_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BindClient is the client API for Bind service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BindClient interface {
	// Apply account bind.
	Apply(ctx context.Context, in *BindRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Cancel account bind.
	Cancel(ctx context.Context, in *BindRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get all bind info.
	Gets(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AccountBinds, error)
}

type bindClient struct {
	cc grpc.ClientConnInterface
}

func NewBindClient(cc grpc.ClientConnInterface) BindClient {
	return &bindClient{cc}
}

func (c *bindClient) Apply(ctx context.Context, in *BindRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appootb.account.Bind/Apply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bindClient) Cancel(ctx context.Context, in *BindRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appootb.account.Bind/Cancel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bindClient) Gets(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*AccountBinds, error) {
	out := new(AccountBinds)
	err := c.cc.Invoke(ctx, "/appootb.account.Bind/Gets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BindServer is the server API for Bind service.
type BindServer interface {
	// Apply account bind.
	Apply(context.Context, *BindRequest) (*empty.Empty, error)
	// Cancel account bind.
	Cancel(context.Context, *BindRequest) (*empty.Empty, error)
	// Get all bind info.
	Gets(context.Context, *empty.Empty) (*AccountBinds, error)
}

// UnimplementedBindServer can be embedded to have forward compatible implementations.
type UnimplementedBindServer struct {
}

func (*UnimplementedBindServer) Apply(context.Context, *BindRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Apply not implemented")
}
func (*UnimplementedBindServer) Cancel(context.Context, *BindRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cancel not implemented")
}
func (*UnimplementedBindServer) Gets(context.Context, *empty.Empty) (*AccountBinds, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Gets not implemented")
}

func RegisterBindServer(s *grpc.Server, srv BindServer) {
	s.RegisterService(&_Bind_serviceDesc, srv)
}

func _Bind_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BindServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.account.Bind/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BindServer).Apply(ctx, req.(*BindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bind_Cancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BindServer).Cancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.account.Bind/Cancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BindServer).Cancel(ctx, req.(*BindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bind_Gets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BindServer).Gets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.account.Bind/Gets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BindServer).Gets(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bind_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appootb.account.Bind",
	HandlerType: (*BindServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Apply",
			Handler:    _Bind_Apply_Handler,
		},
		{
			MethodName: "Cancel",
			Handler:    _Bind_Cancel_Handler,
		},
		{
			MethodName: "Gets",
			Handler:    _Bind_Gets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bind.proto",
}
