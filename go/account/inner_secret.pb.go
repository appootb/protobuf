// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.1
// source: inner_secret.proto

package account

import (
	context "context"
	permission "github.com/appootb/protobuf/go/permission"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Token secret info.
type SecretInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId *string                `protobuf:"bytes,1,req,name=account_id,json=accountId" json:"account_id,omitempty"`                   // Account ID
	DeviceId  *string                `protobuf:"bytes,2,req,name=device_id,json=deviceId" json:"device_id,omitempty"`                      // Device ID
	Level     *permission.TokenLevel `protobuf:"varint,9,req,name=level,enum=appootb.permission.method.TokenLevel" json:"level,omitempty"` // Token access level
}

func (x *SecretInfo) Reset() {
	*x = SecretInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inner_secret_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretInfo) ProtoMessage() {}

func (x *SecretInfo) ProtoReflect() protoreflect.Message {
	mi := &file_inner_secret_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretInfo.ProtoReflect.Descriptor instead.
func (*SecretInfo) Descriptor() ([]byte, []int) {
	return file_inner_secret_proto_rawDescGZIP(), []int{0}
}

func (x *SecretInfo) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *SecretInfo) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *SecretInfo) GetLevel() permission.TokenLevel {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return permission.TokenLevel_NONE_TOKEN
}

var File_inner_secret_proto protoreflect.FileDescriptor

var file_inner_secret_proto_rawDesc = []byte{
	0x0a, 0x12, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x6f, 0x74, 0x62, 0x2e, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x1f, 0x61, 0x70, 0x70, 0x6f, 0x6f, 0x74, 0x62, 0x2f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x61, 0x70, 0x70, 0x6f, 0x6f, 0x74, 0x62, 0x2f,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x3b, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x25,
	0x2e, 0x61, 0x70, 0x70, 0x6f, 0x6f, 0x74, 0x62, 0x2e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x7f, 0x0a, 0x0b,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x69, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x2e, 0x61,
	0x70, 0x70, 0x6f, 0x6f, 0x74, 0x62, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x6f, 0x74, 0x62, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12, 0x1a, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x05, 0x9a, 0x5e, 0x02, 0x08, 0x64, 0x42, 0x76, 0x0a,
	0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x70, 0x6f, 0x6f, 0x74, 0x62, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x10, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x01, 0x50, 0x01, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x70, 0x70, 0x6f, 0x6f, 0x74, 0x62, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67, 0x6f, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x03, 0x43, 0x50, 0x42, 0xaa, 0x02, 0x07, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0xca, 0x02, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74,
}

var (
	file_inner_secret_proto_rawDescOnce sync.Once
	file_inner_secret_proto_rawDescData = file_inner_secret_proto_rawDesc
)

func file_inner_secret_proto_rawDescGZIP() []byte {
	file_inner_secret_proto_rawDescOnce.Do(func() {
		file_inner_secret_proto_rawDescData = protoimpl.X.CompressGZIP(file_inner_secret_proto_rawDescData)
	})
	return file_inner_secret_proto_rawDescData
}

var file_inner_secret_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_inner_secret_proto_goTypes = []interface{}{
	(*SecretInfo)(nil),         // 0: appootb.account.SecretInfo
	(permission.TokenLevel)(0), // 1: appootb.permission.method.TokenLevel
	(*Secret)(nil),             // 2: appootb.account.Secret
}
var file_inner_secret_proto_depIdxs = []int32{
	1, // 0: appootb.account.SecretInfo.level:type_name -> appootb.permission.method.TokenLevel
	2, // 1: appootb.account.InnerSecret.GetSecretInfo:input_type -> appootb.account.Secret
	0, // 2: appootb.account.InnerSecret.GetSecretInfo:output_type -> appootb.account.SecretInfo
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_inner_secret_proto_init() }
func file_inner_secret_proto_init() {
	if File_inner_secret_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_inner_secret_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecretInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_inner_secret_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inner_secret_proto_goTypes,
		DependencyIndexes: file_inner_secret_proto_depIdxs,
		MessageInfos:      file_inner_secret_proto_msgTypes,
	}.Build()
	File_inner_secret_proto = out.File
	file_inner_secret_proto_rawDesc = nil
	file_inner_secret_proto_goTypes = nil
	file_inner_secret_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// InnerSecretClient is the client API for InnerSecret service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InnerSecretClient interface {
	// Get token info.
	GetSecretInfo(ctx context.Context, in *Secret, opts ...grpc.CallOption) (*SecretInfo, error)
}

type innerSecretClient struct {
	cc grpc.ClientConnInterface
}

func NewInnerSecretClient(cc grpc.ClientConnInterface) InnerSecretClient {
	return &innerSecretClient{cc}
}

func (c *innerSecretClient) GetSecretInfo(ctx context.Context, in *Secret, opts ...grpc.CallOption) (*SecretInfo, error) {
	out := new(SecretInfo)
	err := c.cc.Invoke(ctx, "/appootb.account.InnerSecret/GetSecretInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InnerSecretServer is the server API for InnerSecret service.
type InnerSecretServer interface {
	// Get token info.
	GetSecretInfo(context.Context, *Secret) (*SecretInfo, error)
}

// UnimplementedInnerSecretServer can be embedded to have forward compatible implementations.
type UnimplementedInnerSecretServer struct {
}

func (*UnimplementedInnerSecretServer) GetSecretInfo(context.Context, *Secret) (*SecretInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSecretInfo not implemented")
}

func RegisterInnerSecretServer(s *grpc.Server, srv InnerSecretServer) {
	s.RegisterService(&_InnerSecret_serviceDesc, srv)
}

func _InnerSecret_GetSecretInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Secret)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InnerSecretServer).GetSecretInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.account.InnerSecret/GetSecretInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InnerSecretServer).GetSecretInfo(ctx, req.(*Secret))
	}
	return interceptor(ctx, in, info, handler)
}

var _InnerSecret_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appootb.account.InnerSecret",
	HandlerType: (*InnerSecretServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSecretInfo",
			Handler:    _InnerSecret_GetSecretInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inner_secret.proto",
}
