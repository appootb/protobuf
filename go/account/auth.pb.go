// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package account

import (
	context "context"
	fmt "fmt"
	_ "github.com/appootb/protobuf/go/permission"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Login request.
type LoginRequest struct {
	RelateId *string `protobuf:"bytes,1,req,name=relate_id,json=relateId" json:"relate_id,omitempty"`
	// Types that are valid to be assigned to Secure:
	//	*LoginRequest_Code
	//	*LoginRequest_Password
	Secure               isLoginRequest_Secure `protobuf_oneof:"secure"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetRelateId() string {
	if m != nil && m.RelateId != nil {
		return *m.RelateId
	}
	return ""
}

type isLoginRequest_Secure interface {
	isLoginRequest_Secure()
}

type LoginRequest_Code struct {
	Code string `protobuf:"bytes,2,opt,name=code,oneof"`
}

type LoginRequest_Password struct {
	Password string `protobuf:"bytes,3,opt,name=password,oneof"`
}

func (*LoginRequest_Code) isLoginRequest_Secure() {}

func (*LoginRequest_Password) isLoginRequest_Secure() {}

func (m *LoginRequest) GetSecure() isLoginRequest_Secure {
	if m != nil {
		return m.Secure
	}
	return nil
}

func (m *LoginRequest) GetCode() string {
	if x, ok := m.GetSecure().(*LoginRequest_Code); ok {
		return x.Code
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if x, ok := m.GetSecure().(*LoginRequest_Password); ok {
		return x.Password
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*LoginRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*LoginRequest_Code)(nil),
		(*LoginRequest_Password)(nil),
	}
}

// OAuth request.
type OAuthRequest struct {
	Type                 *AuthType `protobuf:"varint,1,req,name=type,enum=appootb.account.AuthType" json:"type,omitempty"`
	OpenId               *string   `protobuf:"bytes,2,req,name=open_id,json=openId" json:"open_id,omitempty"`
	AccessToken          *string   `protobuf:"bytes,3,req,name=access_token,json=accessToken" json:"access_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OAuthRequest) Reset()         { *m = OAuthRequest{} }
func (m *OAuthRequest) String() string { return proto.CompactTextString(m) }
func (*OAuthRequest) ProtoMessage()    {}
func (*OAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *OAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OAuthRequest.Unmarshal(m, b)
}
func (m *OAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OAuthRequest.Marshal(b, m, deterministic)
}
func (m *OAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OAuthRequest.Merge(m, src)
}
func (m *OAuthRequest) XXX_Size() int {
	return xxx_messageInfo_OAuthRequest.Size(m)
}
func (m *OAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OAuthRequest proto.InternalMessageInfo

func (m *OAuthRequest) GetType() AuthType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return AuthType_AUTH_TYPE_UNSPECIFIED
}

func (m *OAuthRequest) GetOpenId() string {
	if m != nil && m.OpenId != nil {
		return *m.OpenId
	}
	return ""
}

func (m *OAuthRequest) GetAccessToken() string {
	if m != nil && m.AccessToken != nil {
		return *m.AccessToken
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "appootb.account.LoginRequest")
	proto.RegisterType((*OAuthRequest)(nil), "appootb.account.OAuthRequest")
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874) }

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 461 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x41, 0x6b, 0x13, 0x41,
	0x14, 0xc7, 0xdd, 0x4d, 0x6c, 0x92, 0x31, 0x2a, 0x4c, 0x8d, 0xc6, 0x6d, 0xd5, 0x1a, 0x50, 0x4a,
	0xc1, 0x1d, 0xe8, 0xb1, 0xb7, 0x44, 0x84, 0x06, 0x04, 0xc3, 0xd2, 0x93, 0x54, 0xc2, 0x64, 0xf6,
	0x65, 0x77, 0x30, 0x3b, 0x6f, 0xdc, 0x99, 0xa5, 0xe4, 0xea, 0x57, 0xf0, 0xea, 0x49, 0xf0, 0xe2,
	0x27, 0x11, 0xaf, 0x5e, 0xfc, 0x00, 0x7e, 0x08, 0x8f, 0x32, 0xb3, 0x9b, 0x52, 0x5b, 0x3d, 0x78,
	0x19, 0x78, 0xff, 0xff, 0xbc, 0xdf, 0x7b, 0x6f, 0xde, 0x10, 0xc2, 0x2b, 0x9b, 0xc7, 0xba, 0x44,
	0x8b, 0xf4, 0x36, 0xd7, 0x1a, 0xd1, 0x2e, 0x62, 0x2e, 0x04, 0x56, 0xca, 0x46, 0x8f, 0x1a, 0x81,
	0x69, 0x28, 0x0b, 0x69, 0x8c, 0x44, 0xc5, 0x0a, 0xb0, 0x39, 0xa6, 0x75, 0x46, 0xb4, 0x9b, 0x21,
	0x66, 0x2b, 0x60, 0x5c, 0x4b, 0xc6, 0x95, 0x42, 0xcb, 0xad, 0x44, 0x65, 0x1a, 0x77, 0xa7, 0x71,
	0x7d, 0xb4, 0xa8, 0x96, 0x0c, 0x0a, 0x6d, 0xd7, 0x8d, 0x79, 0x53, 0x2a, 0xb1, 0xaa, 0x52, 0xa8,
	0xc3, 0x91, 0x24, 0xfd, 0x97, 0x98, 0x49, 0x95, 0xc0, 0xbb, 0x0a, 0x8c, 0xa5, 0x3b, 0xa4, 0x57,
	0xc2, 0x8a, 0x5b, 0x98, 0xcb, 0x74, 0x18, 0xec, 0x85, 0xfb, 0xbd, 0xa4, 0x5b, 0x0b, 0xd3, 0x94,
	0xde, 0x21, 0x6d, 0x81, 0x29, 0x0c, 0xc3, 0xbd, 0x60, 0xbf, 0x77, 0x7c, 0x2d, 0xf1, 0x11, 0xdd,
	0x25, 0x5d, 0xcd, 0x8d, 0x39, 0xc3, 0x32, 0x1d, 0xb6, 0x1a, 0xe7, 0x5c, 0x99, 0x74, 0xc9, 0x96,
	0x01, 0x51, 0x95, 0x30, 0x5a, 0x93, 0xfe, 0xab, 0x71, 0x65, 0xf3, 0x4d, 0xa9, 0x67, 0xa4, 0x6d,
	0xd7, 0x1a, 0x7c, 0x95, 0x5b, 0x87, 0xf7, 0xe3, 0x4b, 0xaf, 0x10, 0xbb, 0xbb, 0x27, 0x6b, 0x0d,
	0x89, 0xbf, 0x46, 0xef, 0x91, 0x0e, 0x6a, 0x50, 0xae, 0xaf, 0xd0, 0xf7, 0xb5, 0xe5, 0xc2, 0x69,
	0x4a, 0x1f, 0x93, 0x3e, 0x17, 0x02, 0x8c, 0x99, 0x5b, 0x7c, 0x0b, 0x6a, 0xd8, 0xf2, 0xee, 0x8d,
	0x5a, 0x3b, 0x71, 0xd2, 0xe1, 0xe7, 0x90, 0xb4, 0x1d, 0x8e, 0xbe, 0x21, 0xd7, 0xfd, 0xb8, 0xf4,
	0xc1, 0x95, 0x72, 0x17, 0x9f, 0x21, 0x1a, 0x5c, 0xb1, 0xa7, 0x6a, 0x89, 0xa3, 0x87, 0xef, 0xbf,
	0xff, 0xfc, 0x10, 0x0e, 0x47, 0xdb, 0xac, 0x91, 0x99, 0x5b, 0x23, 0x5b, 0xb9, 0xd4, 0xa3, 0xe0,
	0xc0, 0xe1, 0xfd, 0x88, 0x7f, 0xc1, 0x5f, 0x1c, 0xfd, 0x3f, 0xf1, 0xe8, 0x4e, 0x87, 0x9f, 0x93,
	0x4e, 0x02, 0xcb, 0x12, 0x4c, 0x4e, 0xef, 0xc6, 0xf5, 0x92, 0xe3, 0xcd, 0x92, 0xe3, 0x17, 0x6e,
	0xc9, 0xff, 0x22, 0x3f, 0xf9, 0xf1, 0x31, 0xf8, 0xda, 0xf6, 0xf8, 0x28, 0x1a, 0xfc, 0x89, 0x2f,
	0x6b, 0xe4, 0x51, 0x70, 0x30, 0x39, 0x23, 0xdb, 0x02, 0x8b, 0xcb, 0x88, 0x49, 0xcf, 0xf5, 0x3e,
	0x73, 0x85, 0x8e, 0x83, 0x59, 0xf0, 0xfa, 0x69, 0x26, 0x6d, 0x5e, 0x2d, 0x62, 0x81, 0x05, 0x3b,
	0xff, 0xa9, 0x9b, 0xbf, 0x96, 0xe1, 0x86, 0xfe, 0x2b, 0x08, 0x3e, 0x85, 0xad, 0xe7, 0xb3, 0xc9,
	0x97, 0xb0, 0x33, 0xae, 0xa5, 0x6f, 0xe1, 0x60, 0x5c, 0x27, 0x9c, 0x7a, 0xdc, 0x69, 0xa3, 0xff,
	0x0e, 0x00, 0x00, 0xff, 0xff, 0xec, 0x3e, 0xd8, 0x61, 0x0f, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthClient is the client API for Auth service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthClient interface {
	// Login.
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Info, error)
	// OAuth.
	OAuth(ctx context.Context, in *OAuthRequest, opts ...grpc.CallOption) (*Info, error)
	// Refresh account token.
	Refresh(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Info, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Info, error) {
	out := new(Info)
	err := c.cc.Invoke(ctx, "/appootb.account.Auth/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) OAuth(ctx context.Context, in *OAuthRequest, opts ...grpc.CallOption) (*Info, error) {
	out := new(Info)
	err := c.cc.Invoke(ctx, "/appootb.account.Auth/OAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Refresh(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Info, error) {
	out := new(Info)
	err := c.cc.Invoke(ctx, "/appootb.account.Auth/Refresh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServer is the server API for Auth service.
type AuthServer interface {
	// Login.
	Login(context.Context, *LoginRequest) (*Info, error)
	// OAuth.
	OAuth(context.Context, *OAuthRequest) (*Info, error)
	// Refresh account token.
	Refresh(context.Context, *empty.Empty) (*Info, error)
}

// UnimplementedAuthServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServer struct {
}

func (*UnimplementedAuthServer) Login(ctx context.Context, req *LoginRequest) (*Info, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedAuthServer) OAuth(ctx context.Context, req *OAuthRequest) (*Info, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OAuth not implemented")
}
func (*UnimplementedAuthServer) Refresh(ctx context.Context, req *empty.Empty) (*Info, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Refresh not implemented")
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.account.Auth/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_OAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).OAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.account.Auth/OAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).OAuth(ctx, req.(*OAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Refresh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Refresh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.account.Auth/Refresh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Refresh(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appootb.account.Auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _Auth_Login_Handler,
		},
		{
			MethodName: "OAuth",
			Handler:    _Auth_OAuth_Handler,
		},
		{
			MethodName: "Refresh",
			Handler:    _Auth_Refresh_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
