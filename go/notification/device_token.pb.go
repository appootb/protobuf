// Code generated by protoc-gen-go. DO NOT EDIT.
// source: device_token.proto

package notification

import (
	context "context"
	fmt "fmt"
	_ "github.com/appootb/protobuf/go/permission"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Device category enums.
type Category int32

const (
	Category_CATEGORY_UNSPECIFIED Category = 0
	Category_CATEGORY_APPLE       Category = 1
)

var Category_name = map[int32]string{
	0: "CATEGORY_UNSPECIFIED",
	1: "CATEGORY_APPLE",
}

var Category_value = map[string]int32{
	"CATEGORY_UNSPECIFIED": 0,
	"CATEGORY_APPLE":       1,
}

func (x Category) Enum() *Category {
	p := new(Category)
	*p = x
	return p
}

func (x Category) String() string {
	return proto.EnumName(Category_name, int32(x))
}

func (x *Category) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Category_value, data, "Category")
	if err != nil {
		return err
	}
	*x = Category(value)
	return nil
}

func (Category) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_08dc0dc0ccc7edcd, []int{0}
}

// Unique device token.
type UniqueToken struct {
	Category             *Category `protobuf:"varint,1,req,name=category,enum=appootb.notification.Category" json:"category,omitempty"`
	Value                *string   `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UniqueToken) Reset()         { *m = UniqueToken{} }
func (m *UniqueToken) String() string { return proto.CompactTextString(m) }
func (*UniqueToken) ProtoMessage()    {}
func (*UniqueToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_08dc0dc0ccc7edcd, []int{0}
}

func (m *UniqueToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UniqueToken.Unmarshal(m, b)
}
func (m *UniqueToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UniqueToken.Marshal(b, m, deterministic)
}
func (m *UniqueToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UniqueToken.Merge(m, src)
}
func (m *UniqueToken) XXX_Size() int {
	return xxx_messageInfo_UniqueToken.Size(m)
}
func (m *UniqueToken) XXX_DiscardUnknown() {
	xxx_messageInfo_UniqueToken.DiscardUnknown(m)
}

var xxx_messageInfo_UniqueToken proto.InternalMessageInfo

func (m *UniqueToken) GetCategory() Category {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return Category_CATEGORY_UNSPECIFIED
}

func (m *UniqueToken) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func init() {
	proto.RegisterEnum("appootb.notification.Category", Category_name, Category_value)
	proto.RegisterType((*UniqueToken)(nil), "appootb.notification.UniqueToken")
}

func init() { proto.RegisterFile("device_token.proto", fileDescriptor_08dc0dc0ccc7edcd) }

var fileDescriptor_08dc0dc0ccc7edcd = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x51, 0xc1, 0x4e, 0xf2, 0x40,
	0x18, 0xfc, 0xb7, 0xbf, 0x1a, 0x5c, 0x0c, 0x21, 0x1b, 0x62, 0x9a, 0x6a, 0x04, 0x39, 0x11, 0x4c,
	0x76, 0x13, 0x4e, 0x86, 0x1b, 0x94, 0xaa, 0x24, 0x06, 0x1b, 0x84, 0x83, 0x86, 0x84, 0x94, 0xb2,
	0x94, 0x8d, 0xb4, 0x5f, 0x85, 0x2d, 0x09, 0x17, 0x0f, 0x3e, 0x82, 0x5e, 0x3d, 0x79, 0xf4, 0x49,
	0x8c, 0x57, 0x2f, 0x3e, 0x80, 0x0f, 0xe1, 0xd1, 0xd0, 0x16, 0x52, 0x13, 0x8e, 0xfb, 0xcd, 0x37,
	0x3b, 0x33, 0xdf, 0x60, 0x32, 0xe4, 0x73, 0x61, 0xf3, 0xbe, 0x84, 0x3b, 0xee, 0x51, 0x7f, 0x0a,
	0x12, 0x48, 0xce, 0xf2, 0x7d, 0x00, 0x39, 0xa0, 0x1e, 0x48, 0x31, 0x12, 0xb6, 0x25, 0x05, 0x78,
	0x5a, 0x3e, 0x9e, 0x32, 0x9f, 0x4f, 0x5d, 0x31, 0x9b, 0x09, 0xf0, 0x98, 0xcb, 0xe5, 0x18, 0x86,
	0x11, 0x4d, 0x3b, 0x74, 0x00, 0x9c, 0x09, 0x67, 0x96, 0x2f, 0x98, 0xe5, 0x79, 0x20, 0x43, 0xde,
	0x2c, 0x46, 0x0f, 0x62, 0x34, 0x7c, 0x0d, 0x82, 0x11, 0xe3, 0xae, 0x2f, 0x17, 0x11, 0x58, 0xec,
	0xe3, 0x74, 0xd7, 0x13, 0xf7, 0x01, 0xef, 0x2c, 0x6d, 0x90, 0x2a, 0x4e, 0xd9, 0x96, 0xe4, 0x0e,
	0x4c, 0x17, 0x2a, 0x2a, 0x28, 0xa5, 0x4c, 0xe5, 0x88, 0x6e, 0xf2, 0x44, 0xf5, 0x78, 0xab, 0xbd,
	0xde, 0x27, 0x39, 0xbc, 0x3d, 0xb7, 0x26, 0x01, 0x57, 0x95, 0x82, 0x52, 0xda, 0x6d, 0x47, 0x8f,
	0xf2, 0x29, 0x4e, 0xad, 0x76, 0x89, 0x8a, 0x73, 0x7a, 0xad, 0x63, 0x9c, 0x5f, 0xb5, 0x6f, 0xfa,
	0xdd, 0xd6, 0xb5, 0x69, 0xe8, 0xcd, 0xb3, 0xa6, 0xd1, 0xc8, 0xfe, 0x23, 0x04, 0x67, 0xd6, 0x48,
	0xcd, 0x34, 0x2f, 0x8d, 0x2c, 0xaa, 0x3c, 0xe0, 0x74, 0x23, 0x3c, 0x51, 0x64, 0x0d, 0xf0, 0x4e,
	0xd7, 0x1f, 0x5a, 0x92, 0x93, 0xe3, 0xcd, 0x96, 0x12, 0x39, 0xb4, 0x7d, 0x1a, 0x85, 0xa6, 0xab,
	0xd0, 0xd4, 0x58, 0x86, 0x2e, 0x96, 0xbf, 0x5e, 0xd0, 0xfb, 0xd6, 0xe3, 0xe7, 0xf7, 0xb3, 0x92,
	0x2f, 0x6a, 0x2c, 0xc9, 0x67, 0x51, 0x1f, 0x2c, 0xec, 0xa3, 0x8a, 0xca, 0xf5, 0x27, 0x84, 0x55,
	0x1b, 0xdc, 0x8d, 0x62, 0xf5, 0x6c, 0xc2, 0x9a, 0xb9, 0xd4, 0xb8, 0x40, 0x26, 0xba, 0x3d, 0x71,
	0x84, 0x1c, 0x07, 0x03, 0x6a, 0x83, 0xcb, 0xd6, 0xa5, 0xad, 0xce, 0xee, 0xc0, 0x1f, 0xbd, 0x1f,
	0x84, 0x5e, 0x95, 0xff, 0xba, 0x59, 0x7f, 0x53, 0xf6, 0x5a, 0x89, 0xf9, 0x87, 0xa2, 0xd5, 0x22,
	0x6a, 0x2f, 0xfc, 0xb8, 0x97, 0x04, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x25, 0x85, 0x6b, 0x52,
	0x36, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeviceTokenClient is the client API for DeviceToken service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceTokenClient interface {
	Update(ctx context.Context, in *UniqueToken, opts ...grpc.CallOption) (*empty.Empty, error)
}

type deviceTokenClient struct {
	cc *grpc.ClientConn
}

func NewDeviceTokenClient(cc *grpc.ClientConn) DeviceTokenClient {
	return &deviceTokenClient{cc}
}

func (c *deviceTokenClient) Update(ctx context.Context, in *UniqueToken, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/appootb.notification.DeviceToken/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeviceTokenServer is the server API for DeviceToken service.
type DeviceTokenServer interface {
	Update(context.Context, *UniqueToken) (*empty.Empty, error)
}

// UnimplementedDeviceTokenServer can be embedded to have forward compatible implementations.
type UnimplementedDeviceTokenServer struct {
}

func (*UnimplementedDeviceTokenServer) Update(ctx context.Context, req *UniqueToken) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}

func RegisterDeviceTokenServer(s *grpc.Server, srv DeviceTokenServer) {
	s.RegisterService(&_DeviceToken_serviceDesc, srv)
}

func _DeviceToken_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UniqueToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceTokenServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appootb.notification.DeviceToken/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceTokenServer).Update(ctx, req.(*UniqueToken))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeviceToken_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appootb.notification.DeviceToken",
	HandlerType: (*DeviceTokenServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Update",
			Handler:    _DeviceToken_Update_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "device_token.proto",
}
