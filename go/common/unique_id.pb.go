// Code generated by protoc-gen-go. DO NOT EDIT.
// source: unique_id.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Unique ID (uint64 type).
type UniqueId struct {
	Id                   *uint64  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UniqueId) Reset()         { *m = UniqueId{} }
func (m *UniqueId) String() string { return proto.CompactTextString(m) }
func (*UniqueId) ProtoMessage()    {}
func (*UniqueId) Descriptor() ([]byte, []int) {
	return fileDescriptor_e593b57a3d5a5334, []int{0}
}

func (m *UniqueId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UniqueId.Unmarshal(m, b)
}
func (m *UniqueId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UniqueId.Marshal(b, m, deterministic)
}
func (m *UniqueId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UniqueId.Merge(m, src)
}
func (m *UniqueId) XXX_Size() int {
	return xxx_messageInfo_UniqueId.Size(m)
}
func (m *UniqueId) XXX_DiscardUnknown() {
	xxx_messageInfo_UniqueId.DiscardUnknown(m)
}

var xxx_messageInfo_UniqueId proto.InternalMessageInfo

func (m *UniqueId) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

// Unique IDs (uint64 array).
type UniqueIds struct {
	Ids                  []uint64 `protobuf:"varint,1,rep,name=ids" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UniqueIds) Reset()         { *m = UniqueIds{} }
func (m *UniqueIds) String() string { return proto.CompactTextString(m) }
func (*UniqueIds) ProtoMessage()    {}
func (*UniqueIds) Descriptor() ([]byte, []int) {
	return fileDescriptor_e593b57a3d5a5334, []int{1}
}

func (m *UniqueIds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UniqueIds.Unmarshal(m, b)
}
func (m *UniqueIds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UniqueIds.Marshal(b, m, deterministic)
}
func (m *UniqueIds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UniqueIds.Merge(m, src)
}
func (m *UniqueIds) XXX_Size() int {
	return xxx_messageInfo_UniqueIds.Size(m)
}
func (m *UniqueIds) XXX_DiscardUnknown() {
	xxx_messageInfo_UniqueIds.DiscardUnknown(m)
}

var xxx_messageInfo_UniqueIds proto.InternalMessageInfo

func (m *UniqueIds) GetIds() []uint64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func init() {
	proto.RegisterType((*UniqueId)(nil), "appootb.common.UniqueId")
	proto.RegisterType((*UniqueIds)(nil), "appootb.common.UniqueIds")
}

func init() { proto.RegisterFile("unique_id.proto", fileDescriptor_e593b57a3d5a5334) }

var fileDescriptor_e593b57a3d5a5334 = []byte{
	// 178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0xcd, 0xcb, 0x2c,
	0x2c, 0x4d, 0x8d, 0xcf, 0x4c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4b, 0x2c, 0x28,
	0xc8, 0xcf, 0x2f, 0x49, 0xd2, 0x4b, 0xce, 0xcf, 0xcd, 0xcd, 0xcf, 0x53, 0x92, 0xe2, 0xe2, 0x08,
	0x05, 0x2b, 0xf1, 0x4c, 0x11, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd2, 0x60,
	0x09, 0x62, 0xca, 0x4c, 0x51, 0x92, 0xe5, 0xe2, 0x84, 0xc9, 0x15, 0x0b, 0x09, 0x70, 0x31, 0x67,
	0xa6, 0x14, 0x4b, 0x30, 0x2a, 0x30, 0x6b, 0xb0, 0x04, 0x81, 0x98, 0x4e, 0xe5, 0x5c, 0x42, 0xc9,
	0xf9, 0xb9, 0x7a, 0xa8, 0x06, 0x3a, 0xf1, 0xc2, 0xb4, 0x04, 0x80, 0xec, 0xf3, 0x60, 0x0c, 0x60,
	0x8c, 0x52, 0x4d, 0xcf, 0x2c, 0xc9, 0x28, 0x05, 0xab, 0xd0, 0x87, 0xaa, 0xd6, 0x07, 0xbb, 0x26,
	0xa9, 0x34, 0x4d, 0x3f, 0x3d, 0x5f, 0x1f, 0xa2, 0xf3, 0x07, 0x23, 0xe3, 0x22, 0x26, 0x66, 0xe7,
	0x00, 0xa7, 0x55, 0x4c, 0x6c, 0xce, 0x60, 0x91, 0x53, 0x4c, 0x22, 0x8e, 0x10, 0xe5, 0x31, 0x60,
	0xc3, 0x62, 0x20, 0xc2, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6f, 0x42, 0x89, 0x31, 0xd5, 0x00,
	0x00, 0x00,
}
