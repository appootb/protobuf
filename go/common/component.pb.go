// Code generated by protoc-gen-go. DO NOT EDIT.
// source: component.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Component enums.
type Component int32

const (
	Component_COMPONENT_UNSPECIFIED Component = 0
	Component_COMPONENT_CAPTCHA     Component = 1
	Component_COMPONENT_ACCOUNT     Component = 2
	Component_COMPONENT_STRAINER    Component = 3
)

var Component_name = map[int32]string{
	0: "COMPONENT_UNSPECIFIED",
	1: "COMPONENT_CAPTCHA",
	2: "COMPONENT_ACCOUNT",
	3: "COMPONENT_STRAINER",
}

var Component_value = map[string]int32{
	"COMPONENT_UNSPECIFIED": 0,
	"COMPONENT_CAPTCHA":     1,
	"COMPONENT_ACCOUNT":     2,
	"COMPONENT_STRAINER":    3,
}

func (x Component) Enum() *Component {
	p := new(Component)
	*p = x
	return p
}

func (x Component) String() string {
	return proto.EnumName(Component_name, int32(x))
}

func (x *Component) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Component_value, data, "Component")
	if err != nil {
		return err
	}
	*x = Component(value)
	return nil
}

func (Component) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_46d0c32769b258ba, []int{0}
}

func init() {
	proto.RegisterEnum("appootb.common.Component", Component_name, Component_value)
}

func init() { proto.RegisterFile("component.proto", fileDescriptor_46d0c32769b258ba) }

var fileDescriptor_46d0c32769b258ba = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0xce, 0xcf, 0x2d,
	0xc8, 0xcf, 0x4b, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4b, 0x2c, 0x28,
	0xc8, 0xcf, 0x2f, 0x49, 0xd2, 0x4b, 0xce, 0xcf, 0xcd, 0xcd, 0xcf, 0xd3, 0xca, 0xe1, 0xe2, 0x74,
	0x86, 0x29, 0x11, 0x92, 0xe4, 0x12, 0x75, 0xf6, 0xf7, 0x0d, 0xf0, 0xf7, 0x73, 0xf5, 0x0b, 0x89,
	0x0f, 0xf5, 0x0b, 0x0e, 0x70, 0x75, 0xf6, 0x74, 0xf3, 0x74, 0x75, 0x11, 0x60, 0x10, 0x12, 0xe5,
	0x12, 0x44, 0x48, 0x39, 0x3b, 0x06, 0x84, 0x38, 0x7b, 0x38, 0x0a, 0x30, 0xa2, 0x0a, 0x3b, 0x3a,
	0x3b, 0xfb, 0x87, 0xfa, 0x85, 0x08, 0x30, 0x09, 0x89, 0x71, 0x09, 0x21, 0x84, 0x83, 0x43, 0x82,
	0x1c, 0x3d, 0xfd, 0x5c, 0x83, 0x04, 0x98, 0x9d, 0x2a, 0xb8, 0x84, 0x92, 0xf3, 0x73, 0xf5, 0x50,
	0xdd, 0xe0, 0xc4, 0x07, 0x77, 0x41, 0x00, 0xc8, 0x8d, 0x1e, 0x8c, 0x01, 0x8c, 0x51, 0xaa, 0xe9,
	0x99, 0x25, 0x19, 0xa5, 0x60, 0x25, 0xfa, 0x50, 0xe5, 0xfa, 0x60, 0x1f, 0x24, 0x95, 0xa6, 0xe9,
	0xa7, 0xe7, 0xeb, 0x43, 0xb4, 0xfe, 0x60, 0x64, 0x5c, 0xc4, 0xc4, 0xec, 0x1c, 0xe0, 0xb4, 0x8a,
	0x89, 0xcd, 0x19, 0x2c, 0x72, 0x8a, 0x49, 0xc4, 0x11, 0xa2, 0x3c, 0x06, 0x6c, 0x58, 0x0c, 0x44,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x38, 0xed, 0x55, 0x09, 0x01, 0x00, 0x00,
}
